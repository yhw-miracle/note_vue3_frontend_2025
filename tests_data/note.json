[{"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "###  使用 conda 安装 torch 环境\n\n```bash\npip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu\n\npip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n\npip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121\n\npip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121\n```", "content_hash": "16d693fab741b7becfcc6899e0b043524caede85b92e2956ce0330a57a57f9147195a1160b41b94844b935c00eafa5e0d30eeb2a8305a326c536be5270394914", "create_time": 1735778213.0, "note_id": "e1e649128370faf1e2e3faa01764fac6af91e2f86aa56b7a20ea65b0775bede01bb1bfe88a48d386fcf29abc475cdebc730a9943f0024fe07252025c9be3ec89", "path": "data/2025/1/2/e1e649128370faf1e2e3faa01764fac6af91e2f86aa56b7a20ea65b0775bede01bb1bfe88a48d386fcf29abc475cdebc730a9943f0024fe07252025c9be3ec89/使用 conda 安装 torch 环境.md", "tags": [{"create_time": 1735778213.0, "name": "conda", "tag_id": "4c288d7c1fb0f415791991923bd02feca1a9d61091d7c39e03fd5c2634a93623bbdd17a44141515108cabf72cdc938aa80f4d66bb05e8d7c36aa03ca3c036033"}, {"create_time": 1735778213.0, "name": "pytorch", "tag_id": "e9fa0ea12beeb42f2f0b211efdfb707beb3775245e75bc7c016e76fd183429eb7ec8129e16a3ffedc4b9b249f91ff33012f5edd7a816d3c15c86540615d9d527"}], "title": "使用 conda 安装 torch 环境"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 使用 conda 安装 yolo 环境\n\n```bash\npip install ultralytics\n```", "content_hash": "23abbfa7e8617282d9ee3d571b7582283d11d2386b36a9bea28fbe0371aa5a2e5f41692eb89d5d7b285ae38d650c785701661f3b7ee2673ae7d7996f67985092", "create_time": 1736037538.0, "note_id": "35f48650ad3e42c008868425c9f5a93682071514e7f338f7c96c3b830b6067feca8e2151f0c1e13fb59d8fe5573a084162be58a382c32d7761e2df40bce54cde", "path": "data/2025/1/5/35f48650ad3e42c008868425c9f5a93682071514e7f338f7c96c3b830b6067feca8e2151f0c1e13fb59d8fe5573a084162be58a382c32d7761e2df40bce54cde/使用 conda 安装 yolo 环境.md", "tags": [{"create_time": 1735778213.0, "name": "conda", "tag_id": "4c288d7c1fb0f415791991923bd02feca1a9d61091d7c39e03fd5c2634a93623bbdd17a44141515108cabf72cdc938aa80f4d66bb05e8d7c36aa03ca3c036033"}, {"create_time": 1736037538.0, "name": "yolo", "tag_id": "cdc86ec5eba41ac0a9b4873bd657418ee58bd787b60d83a48ba5d828b67299c7aad1a923c30df524f5ff3eb2fe49692aaa6d62efdb73b5065f8ae92e79cdbf8b"}], "title": "使用 conda 安装 yolo 环境"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 安装 QT 软件\n\n```bash\nsudo apt install libxcb-cursor0 libxcb-cursor-dev\n\nsudo apt install build-essential libgl1-mesa-dev\n\nsudo apt install libx11-xcb-dev '^libxcb*\n\nsudo apt install libcanberra-gtk-module\n\n./qt-unified-linux-x64-online.run --mirror https://mirrors.ustc.edu.cn/qtproject\n```", "content_hash": "fd5bae3cadf72c39a734f3d62b016ef495c3b12eec7e731d0276dd7e0a83aec8a760e19dc0bddd2da3b2429f9507d3e03ea7bf40dd7d3b12f677e49daa450235", "create_time": 1736117844.0, "note_id": "182174cb2d0b3c47e39ff2b1c72cb3a57c5c73c80819ac60327a8473885840861675dad376bad24cb7a7584fde44b362a1682e071f16a35d87316e60ee86dff6", "path": "data/2025/1/6/182174cb2d0b3c47e39ff2b1c72cb3a57c5c73c80819ac60327a8473885840861675dad376bad24cb7a7584fde44b362a1682e071f16a35d87316e60ee86dff6/安装 QT 软件.md", "tags": [{"create_time": 1736117844.0, "name": "qt", "tag_id": "2dca0e8b21707d20f49128ec353ba931fde2fca2ebcfcccc0c2475656c71e36effaa9babb5252547f4676997a17d6cb271d51093ceafd9a64bce533099dfdff7"}], "title": "安装 QT 软件"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### ubuntu22.04 设置 X11 桌面环境\n\n```bash\n# /etc/gdm3/custom.conf\n[daemon]\nWaylandEnable=false\n```", "content_hash": "7352f7fe6affd819f36a3943565b499cb935f880b92b958a0ab21a9afa64bc80ad42c2cca17a7ec608a602da6f06a709da6691654f0377c9c13e37b1d79368a6", "create_time": 1737232791.0, "note_id": "26ccf27da821049d1eb8d16c81796ffcc305b95bc20618e17acb064ab1a705913d12b63dd9350454c426c8412166a01527a2d1ddc1a7d21df8d8d298962557fb", "path": "data/2025/1/19/26ccf27da821049d1eb8d16c81796ffcc305b95bc20618e17acb064ab1a705913d12b63dd9350454c426c8412166a01527a2d1ddc1a7d21df8d8d298962557fb/ubuntu22.04 设置 X11 桌面环境.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1737232791.0, "name": "x11", "tag_id": "07abf6f42a836d2924e3ac51f494b31e34a74f5080489e61b0e915d14f2dc75b61e61a1684a08338211d92a9fe1deacc89d9720b3ce15a7a941e48fef7a50ba1"}], "title": "ubuntu22.04 设置 X11 桌面环境"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### ubuntu 设置开机自动挂载磁盘\n\n```bash\nlsblk -f\n\necho 'UUID=DBCFBC67774DDE07 /home/demo01/d/ ntfs defaults,nofail 0 0' >> /etc/fstab\n\necho 'UUID=DBCFBC67774DDE07 /home/demo01/d/ ntfs defaults,nls=utf8,umask=000,uid=1000,gid=1000 0 1' >> /etc/fstab\necho '/dev/sdb1 /home/demo01/d ntfs defaults,nls=utf8,umask=000,uid=1000,gid=1000 0 1' >> /etc/fstab\necho '/dev/sdb1 /home/demo01/d ext4 defaults 0 2' >> /etc/fstab\n\n```", "content_hash": "b711fa96ed3176e6a33be491d60bfb54168872a65152d84cc56373c8c22cc6d4dce8ef6e5a80b4b6d6325ea5838946b66254a832d455c735737c0c9bd96b62ab", "create_time": 1737377712.0, "note_id": "339d6b7d668011bee3a85823a9f946420318e326055603664a21c56594916654f1715db82eaf028de387817146484ca95d4828649c36a21426204f07fb72b61a", "path": "data/2025/1/20/339d6b7d668011bee3a85823a9f946420318e326055603664a21c56594916654f1715db82eaf028de387817146484ca95d4828649c36a21426204f07fb72b61a/ubuntu 设置开机自动挂载磁盘.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1737377712.0, "name": "磁盘", "tag_id": "72c0e87b4c0c56318540a3f645c6a137a7486f65ebe47635ea0ea710772b955fe36e956ea36c7d5e2a538f3ef767551b79f5a029aefcb1fed40000f8660d3c92"}], "title": "ubuntu 设置开机自动挂载磁盘"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 安装gitea\n\n```txt\n[Unit]\nDescription=Gitea (Git with a cup of tea)\n#After=network.target\nAfter=network-online.target\n###\n# Don't forget to add the database service dependencies\n###\n#\n#Wants=mysql.service\n#After=mysql.service\n#\n#Wants=mariadb.service\n#After=mariadb.service\n#\n#Wants=postgresql.service\n#After=postgresql.service\n#\n#Wants=memcached.service\n#After=memcached.service\n#\n#Wants=redis.service\n#After=redis.service\n#\n###\n# If using socket activation for main http/s\n###\n#\n#After=gitea.main.socket\n#Requires=gitea.main.socket\n#\n###\n# (You can also provide gitea an http fallback and/or ssh socket too)\n#\n# An example of /etc/systemd/system/gitea.main.socket\n###\n##\n## [Unit]\n## Description=Gitea Web Socket\n## PartOf=gitea.service\n##\n## [Socket]\n## Service=gitea.service\n## ListenStream=<some_port>\n## NoDelay=true\n##\n## [Install]\n## WantedBy=sockets.target\n##\n###\n\n[Service]\n# Uncomment the next line if you have repos with lots of files and get a HTTP 500 error because of that\n# LimitNOFILE=524288:524288\nRestartSec=2s\nType=simple\nUser=demo01\nGroup=demo01\nWorkingDirectory=/home/demo01/d/development/gitea/gitea_home\n# If using Unix socket: tells systemd to create the /run/gitea folder, which will contain the gitea.sock file\n# (manually creating /run/gitea doesn't work, because it would not persist across reboots)\n#RuntimeDirectory=gitea\nExecStart=/home/demo01/d/development/gitea/gitea_home/gitea-1.23.6-linux-amd64 web --config /home/demo01/d/development/gitea/gitea_home/custom/conf/app.ini\nRestart=always\nEnvironment=USER=demo01 HOME=/home/demo01 GITEA_WORK_DIR=/home/demo01/d/development/gitea/gitea_home\n# If you install Git to directory prefix other than default PATH (which happens\n# for example if you install other versions of Git side-to-side with\n# distribution version), uncomment below line and add that prefix to PATH\n# Don't forget to place git-lfs binary on the PATH below if you want to enable\n# Git LFS support\n#Environment=PATH=/path/to/git/bin:/bin:/sbin:/usr/bin:/usr/sbin\n# If you want to bind Gitea to a port below 1024, uncomment\n# the two values below, or use socket activation to pass Gitea its ports as above\n###\n#CapabilityBoundingSet=CAP_NET_BIND_SERVICE\n#AmbientCapabilities=CAP_NET_BIND_SERVICE\n###\n# In some cases, when using CapabilityBoundingSet and AmbientCapabilities option, you may want to\n# set the following value to false to allow capabilities to be applied on gitea process. The following\n# value if set to true sandboxes gitea service and prevent any processes from running with privileges\n# in the host user namespace.\n###\n#PrivateUsers=false\n###\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl enable gitea\nsudo systemctl start gitea\nsudo systemctl status gitea\nsudo systemctl restart gitea\n```\n", "content_hash": "e78abf0e1f5b4595a74349e36cdd4ce6dace9ddd850e9fd61ef7f238ce75519c371b8e159f9d0aca82f3914fbc872049f7c51e62fe022854eb6f1ffd286d6818", "create_time": 1737388800.0, "note_id": "1fef7d727ab0147d5a53ec45eece74dc79e96687b409469487e0a04749359504f34e37393d8ba9eab6b878ba8a178d487da0ecd3e5dbc80ad0f00722a0426e54", "path": "data/2025/1/21/1fef7d727ab0147d5a53ec45eece74dc79e96687b409469487e0a04749359504f34e37393d8ba9eab6b878ba8a178d487da0ecd3e5dbc80ad0f00722a0426e54/安装gitea.md", "tags": [{"create_time": 1737388800.0, "name": "git", "tag_id": "8df9a7b7958401492a79442f457d3d6aa6b434381ab872fbbf023d2304699359804261a8c3507c985cab23ac0f8b172ad0790de170e9e0d67f0dec433e990745"}, {"create_time": 1737388800.0, "name": "gitea", "tag_id": "24a5938703c19739b2051bf12d857a3efa8f1ace969ad0f1b14ca77e40926ec8dbae60c4f4907a25f19edfec259e5d7a7e67fcc13bfd2408bf6e2b8a19c09a22"}], "title": "安装gitea"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### SSH 设置远程登录客户端连接时间\n\n在配置文件 /etc/ssh/sshd_config 中配置以下信息，然后重启 SSH 服务。\n\n```conf\nClientAliveInterval 60\nClientAliveCountMax 600\n```", "content_hash": "877357cf2221912ccda6b2160db9ad3360c8a2e17aff2b9fbbd8c04149c017bedec83d358123ac7f0aff9ad559fd7543d8f2e8504d9d94ad4571144863e3b40b", "create_time": 1737953227.0, "note_id": "76ce0ac805290916decc29aebdb7bf87da147b430331287ec917f4e69397572de9db24e1720c8404aa98ffe79a2877f072e0046805c150dcc271a5d1ec79d3ee", "path": "data/2025/1/27/76ce0ac805290916decc29aebdb7bf87da147b430331287ec917f4e69397572de9db24e1720c8404aa98ffe79a2877f072e0046805c150dcc271a5d1ec79d3ee/SSH 设置远程登录客户端连接时间.md", "tags": [{"create_time": 1737953227.0, "name": "ssh", "tag_id": "7ae40035d8c0fcb42e5a39ab923157aa9e41945b7463268881fc9449e48f0e9b54ca8cba60d6cc7000752ac9310d2879cc6b12c9171265c0abbc79dcfeeaa424"}], "title": "SSH 设置远程登录客户端连接时间"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 使用 frp 设置 SSH 内网穿透\n服务器配置文件\n```conf\n# This configuration file is for reference only. Please do not use this configuration directly to run the program as it may have various issues.\n\n# A literal address or host name for IPv6 must be enclosed\n# in square brackets, as in \"[::1]:80\", \"[ipv6-host]:http\" or \"[ipv6-host%zone]:80\"\n# For single \"bindAddr\" field, no need square brackets, like `bindAddr = \"::\"`.\nbindAddr = \"0.0.0.0\"\nbindPort = 7000\n\n# udp port used for kcp protocol, it can be same with 'bindPort'.\n# if not set, kcp is disabled in frps.\nkcpBindPort = 7000\n\n# udp port used for quic protocol.\n# if not set, quic is disabled in frps.\n# quicBindPort = 7002\n\n# Specify which address proxy will listen for, default value is same with bindAddr\n# proxyBindAddr = \"127.0.0.1\"\n\n# quic protocol options\n# transport.quic.keepalivePeriod = 10\n# transport.quic.maxIdleTimeout = 30\n# transport.quic.maxIncomingStreams = 100000\n\n# Heartbeat configure, it's not recommended to modify the default value\n# The default value of heartbeatTimeout is 90. Set negative value to disable it.\n# transport.heartbeatTimeout = 90\n\n# Pool count in each proxy will keep no more than maxPoolCount.\ntransport.maxPoolCount = 5\n\n# If tcp stream multiplexing is used, default is true\n# transport.tcpMux = true\n\n# Specify keep alive interval for tcp mux.\n# only valid if tcpMux is true.\n# transport.tcpMuxKeepaliveInterval = 30\n\n# tcpKeepalive specifies the interval between keep-alive probes for an active network connection between frpc and frps.\n# If negative, keep-alive probes are disabled.\n# transport.tcpKeepalive = 7200\n\n# transport.tls.force specifies whether to only accept TLS-encrypted connections. By default, the value is false.\ntransport.tls.force = false\n\n# transport.tls.certFile = \"server.crt\"\n# transport.tls.keyFile = \"server.key\"\n# transport.tls.trustedCaFile = \"ca.crt\"\n\n# If you want to support virtual host, you must set the http port for listening (optional)\n# Note: http port and https port can be same with bindPort\nvhostHTTPPort = 80\nvhostHTTPSPort = 443\n\n# Response header timeout(seconds) for vhost http server, default is 60s\n# vhostHTTPTimeout = 60\n\n# tcpmuxHTTPConnectPort specifies the port that the server listens for TCP\n# HTTP CONNECT requests. If the value is 0, the server will not multiplex TCP\n# requests on one single port. If it's not - it will listen on this value for\n# HTTP CONNECT requests. By default, this value is 0.\n# tcpmuxHTTPConnectPort = 1337\n\n# If tcpmuxPassthrough is true, frps won't do any update on traffic.\n# tcpmuxPassthrough = false\n\n# Configure the web server to enable the dashboard for frps.\n# dashboard is available only if webServer.port is set.\nwebServer.addr = \"127.0.0.1\"\nwebServer.port = 7500\nwebServer.user = \"admin\"\nwebServer.password = \"admin\"\n# webServer.tls.certFile = \"server.crt\"\n# webServer.tls.keyFile = \"server.key\"\n# dashboard assets directory(only for debug mode)\n# webServer.assetsDir = \"./static\"\n\n# Enable golang pprof handlers in dashboard listener.\n# Dashboard port must be set first\nwebServer.pprofEnable = false\n\n# enablePrometheus will export prometheus metrics on webServer in /metrics api.\nenablePrometheus = true\n\n# console or real logFile path like ./frps.log\nlog.to = \"./frps.log\"\n# trace, debug, info, warn, error\nlog.level = \"info\"\nlog.maxDays = 3\n# disable log colors when log.to is console, default is false\nlog.disablePrintColor = false\n\n# DetailedErrorsToClient defines whether to send the specific error (with debug info) to frpc. By default, this value is true.\ndetailedErrorsToClient = true\n\n# auth.method specifies what authentication method to use authenticate frpc with frps.\n# If \"token\" is specified - token will be read into login message.\n# If \"oidc\" is specified - OIDC (Open ID Connect) token will be issued using OIDC settings. By default, this value is \"token\".\nauth.method = \"token\"\n\n# auth.additionalScopes specifies additional scopes to include authentication information.\n# Optional values are HeartBeats, NewWorkConns.\n# auth.additionalScopes = [\"HeartBeats\", \"NewWorkConns\"]\n\n# auth token\nauth.token = \"12345678\"\n\n# oidc issuer specifies the issuer to verify OIDC tokens with.\nauth.oidc.issuer = \"\"\n# oidc audience specifies the audience OIDC tokens should contain when validated.\nauth.oidc.audience = \"\"\n# oidc skipExpiryCheck specifies whether to skip checking if the OIDC token is expired.\nauth.oidc.skipExpiryCheck = false\n# oidc skipIssuerCheck specifies whether to skip checking if the OIDC token's issuer claim matches the issuer specified in OidcIssuer.\nauth.oidc.skipIssuerCheck = false\n\n# userConnTimeout specifies the maximum time to wait for a work connection.\n# userConnTimeout = 10\n\n# Only allow frpc to bind ports you list. By default, there won't be any limit.\nallowPorts = [\n  { start = 2000, end = 3000 },\n  { single = 3001 },\n  { single = 3003 },\n  { start = 4000, end = 50000 }\n]\n\n# Max ports can be used for each client, default value is 0 means no limit\nmaxPortsPerClient = 0\n\n# If subDomainHost is not empty, you can set subdomain when type is http or https in frpc's configure file\n# When subdomain is test, the host used by routing is test.frps.com\nsubDomainHost = \"frps.com\"\n\n# custom 404 page for HTTP requests\n# custom404Page = \"/path/to/404.html\"\n\n# specify udp packet size, unit is byte. If not set, the default value is 1500.\n# This parameter should be same between client and server.\n# It affects the udp and sudp proxy.\nudpPacketSize = 1500\n\n# Retention time for NAT hole punching strategy data.\nnatholeAnalysisDataReserveHours = 168\n\n# ssh tunnel gateway\n# If you want to enable this feature, the bindPort parameter is required, while others are optional.\n# By default, this feature is disabled. It will be enabled if bindPort is greater than 0.\n# sshTunnelGateway.bindPort = 2200\n# sshTunnelGateway.privateKeyFile = \"/home/frp-user/.ssh/id_rsa\"\n# sshTunnelGateway.autoGenPrivateKeyPath = \"\"\n# sshTunnelGateway.authorizedKeysFile = \"/home/frp-user/.ssh/authorized_keys\"\n\n[[httpPlugins]]\nname = \"user-manager\"\naddr = \"127.0.0.1:9000\"\npath = \"/handler\"\nops = [\"Login\"]\n\n[[httpPlugins]]\nname = \"port-manager\"\naddr = \"127.0.0.1:9001\"\npath = \"/handler\"\nops = [\"NewProxy\"]\n```\n\n客户端文件\n```conf\n# This configuration file is for reference only. Please do not use this configuration directly to run the program as it may have various issues.\n\n# your proxy name will be changed to {user}.{proxy}\nuser = \"your_name\"\n\n# A literal address or host name for IPv6 must be enclosed\n# in square brackets, as in \"[::1]:80\", \"[ipv6-host]:http\" or \"[ipv6-host%zone]:80\"\n# For single serverAddr field, no need square brackets, like serverAddr = \"::\".\nserverAddr = \"0.0.0.0\"\nserverPort = 7000\n\n# STUN server to help penetrate NAT hole.\n# natHoleStunServer = \"stun.easyvoip.com:3478\"\n\n# Decide if exit program when first login failed, otherwise continuous relogin to frps\n# default is true\nloginFailExit = true\n\n# console or real logFile path like ./frpc.log\nlog.to = \"./frpc.log\"\n# trace, debug, info, warn, error\nlog.level = \"info\"\nlog.maxDays = 3\n# disable log colors when log.to is console, default is false\nlog.disablePrintColor = false\n\nauth.method = \"token\"\n# auth.additionalScopes specifies additional scopes to include authentication information.\n# Optional values are HeartBeats, NewWorkConns.\n# auth.additionalScopes = [\"HeartBeats\", \"NewWorkConns\"]\n\n# auth token\nauth.token = \"12345678\"\n\n# oidc.clientID specifies the client ID to use to get a token in OIDC authentication.\n# auth.oidc.clientID = \"\"\n# oidc.clientSecret specifies the client secret to use to get a token in OIDC authentication.\n# auth.oidc.clientSecret = \"\"\n# oidc.audience specifies the audience of the token in OIDC authentication.\n# auth.oidc.audience = \"\"\n# oidc.scope specifies the permissions of the token in OIDC authentication if AuthenticationMethod == \"oidc\". By default, this value is \"\".\n# auth.oidc.scope = \"\"\n# oidc.tokenEndpointURL specifies the URL which implements OIDC Token Endpoint.\n# It will be used to get an OIDC token.\n# auth.oidc.tokenEndpointURL = \"\"\n\n# oidc.additionalEndpointParams specifies additional parameters to be sent to the OIDC Token Endpoint.\n# For example, if you want to specify the \"audience\" parameter, you can set as follow.\n# frp will add \"audience=<value>\" \"var1=<value>\" to the additional parameters.\n# auth.oidc.additionalEndpointParams.audience = \"https://dev.auth.com/api/v2/\"\n# auth.oidc.additionalEndpointParams.var1 = \"foobar\"\n\n# Set admin address for control frpc's action by http api such as reload\nwebServer.addr = \"127.0.0.1\"\nwebServer.port = 7400\nwebServer.user = \"admin\"\nwebServer.password = \"admin\"\n# Admin assets directory. By default, these assets are bundled with frpc.\n# webServer.assetsDir = \"./static\"\n\n# Enable golang pprof handlers in admin listener.\nwebServer.pprofEnable = false\n\n# The maximum amount of time a dial to server will wait for a connect to complete. Default value is 10 seconds.\n# transport.dialServerTimeout = 10\n\n# dialServerKeepalive specifies the interval between keep-alive probes for an active network connection between frpc and frps.\n# If negative, keep-alive probes are disabled.\n# transport.dialServerKeepalive = 7200\n\n# connections will be established in advance, default value is zero\ntransport.poolCount = 5\n\n# If tcp stream multiplexing is used, default is true, it must be same with frps\n# transport.tcpMux = true\n\n# Specify keep alive interval for tcp mux.\n# only valid if tcpMux is enabled.\n# transport.tcpMuxKeepaliveInterval = 30\n\n# Communication protocol used to connect to server\n# supports tcp, kcp, quic, websocket and wss now, default is tcp\ntransport.protocol = \"tcp\"\n\n# set client binding ip when connect server, default is empty.\n# only when protocol = tcp or websocket, the value will be used.\ntransport.connectServerLocalIP = \"0.0.0.0\"\n\n# if you want to connect frps by http proxy or socks5 proxy or ntlm proxy, you can set proxyURL here or in global environment variables\n# it only works when protocol is tcp\n# transport.proxyURL = \"http://user:passwd@192.168.1.128:8080\"\n# transport.proxyURL = \"socks5://user:passwd@192.168.1.128:1080\"\n# transport.proxyURL = \"ntlm://user:passwd@192.168.1.128:2080\"\n\n# quic protocol options\n# transport.quic.keepalivePeriod = 10\n# transport.quic.maxIdleTimeout = 30\n# transport.quic.maxIncomingStreams = 100000\n\n# If tls.enable is true, frpc will connect frps by tls.\n# Since v0.50.0, the default value has been changed to true, and tls is enabled by default.\ntransport.tls.enable = true\n\n# transport.tls.certFile = \"client.crt\"\n# transport.tls.keyFile = \"client.key\"\n# transport.tls.trustedCaFile = \"ca.crt\"\n# transport.tls.serverName = \"example.com\"\n\n# If the disableCustomTLSFirstByte is set to false, frpc will establish a connection with frps using the\n# first custom byte when tls is enabled.\n# Since v0.50.0, the default value has been changed to true, and the first custom byte is disabled by default.\n# transport.tls.disableCustomTLSFirstByte = true\n\n# Heartbeat configure, it's not recommended to modify the default value.\n# The default value of heartbeatInterval is 10 and heartbeatTimeout is 90. Set negative value\n# to disable it.\n# transport.heartbeatInterval = 30\n# transport.heartbeatTimeout = 90\n\n# Specify a dns server, so frpc will use this instead of default one\n# dnsServer = \"8.8.8.8\"\n\n# Proxy names you want to start.\n# Default is empty, means all proxies.\n# start = [\"ssh\", \"dns\"]\n\n# Specify udp packet size, unit is byte. If not set, the default value is 1500.\n# This parameter should be same between client and server.\n# It affects the udp and sudp proxy.\nudpPacketSize = 1500\n\n# Additional metadatas for client.\nmetadatas.var1 = \"abc\"\nmetadatas.var2 = \"123\"\n\n# Include other config files for proxies.\n# includes = [\"./confd/*.ini\"]\n\n[[proxies]]\n# 'ssh' is the unique proxy name\n# If global user is not empty, it will be changed to {user}.{proxy} such as 'your_name.ssh'\nname = \"ssh\"\ntype = \"tcp\"\nlocalIP = \"127.0.0.1\"\nlocalPort = 22\n# Limit bandwidth for this proxy, unit is KB and MB\ntransport.bandwidthLimit = \"1MB\"\n# Where to limit bandwidth, can be 'client' or 'server', default is 'client'\ntransport.bandwidthLimitMode = \"client\"\n# If true, traffic of this proxy will be encrypted, default is false\ntransport.useEncryption = false\n# If true, traffic will be compressed\ntransport.useCompression = false\n# Remote port listen by frps\nremotePort = 6001\n# frps will load balancing connections for proxies in same group\nloadBalancer.group = \"test_group\"\n# group should have same group key\nloadBalancer.groupKey = \"123456\"\n# Enable health check for the backend service, it supports 'tcp' and 'http' now.\n# frpc will connect local service's port to detect it's healthy status\nhealthCheck.type = \"tcp\"\n# Health check connection timeout\nhealthCheck.timeoutSeconds = 3\n# If continuous failed in 3 times, the proxy will be removed from frps\nhealthCheck.maxFailed = 3\n# Every 10 seconds will do a health check\nhealthCheck.intervalSeconds = 10\n# Additional meta info for each proxy. It will be passed to the server-side plugin for use.\nmetadatas.var1 = \"abc\"\nmetadatas.var2 = \"123\"\n# You can add some extra information to the proxy through annotations.\n# These annotations will be displayed on the frps dashboard.\n[proxies.annotations]\nkey1 = \"value1\"\n\"prefix/key2\" = \"value2\"\n\n[[proxies]]\nname = \"ssh_random\"\ntype = \"tcp\"\nlocalIP = \"192.168.31.100\"\nlocalPort = 22\n# If remotePort is 0, frps will assign a random port for you\nremotePort = 0\n\n[[proxies]]\nname = \"dns\"\ntype = \"udp\"\nlocalIP = \"114.114.114.114\"\nlocalPort = 53\nremotePort = 6002\n\n# Resolve your domain names to [serverAddr] so you can use http://web01.yourdomain.com to browse web01 and http://web02.yourdomain.com to browse web02\n[[proxies]]\nname = \"web01\"\ntype = \"http\"\nlocalIP = \"127.0.0.1\"\nlocalPort = 80\n# http username and password are safety certification for http protocol\n# if not set, you can access this customDomains without certification\nhttpUser = \"admin\"\nhttpPassword = \"admin\"\n# if domain for frps is frps.com, then you can access [web01] proxy by URL http://web01.frps.com\nsubdomain = \"web01\"\ncustomDomains = [\"web01.yourdomain.com\"]\n# locations is only available for http type\nlocations = [\"/\", \"/pic\"]\n# route requests to this service if http basic auto user is abc\n# routeByHTTPUser = abc\nhostHeaderRewrite = \"example.com\"\nrequestHeaders.set.x-from-where = \"frp\"\nresponseHeaders.set.foo = \"bar\"\nhealthCheck.type = \"http\"\n# frpc will send a GET http request '/status' to local http service\n# http service is alive when it return 2xx http response code\nhealthCheck.path = \"/status\"\nhealthCheck.intervalSeconds = 10\nhealthCheck.maxFailed = 3\nhealthCheck.timeoutSeconds = 3\n# set health check headers\nhealthCheck.httpHeaders=[\n    { name = \"x-from-where\", value = \"frp\" }\n]\n\n[[proxies]]\nname = \"web02\"\ntype = \"https\"\nlocalIP = \"127.0.0.1\"\nlocalPort = 8000\nsubdomain = \"web02\"\ncustomDomains = [\"web02.yourdomain.com\"]\n# if not empty, frpc will use proxy protocol to transfer connection info to your local service\n# v1 or v2 or empty\ntransport.proxyProtocolVersion = \"v2\"\n\n[[proxies]]\nname = \"tcpmuxhttpconnect\"\ntype = \"tcpmux\"\nmultiplexer = \"httpconnect\"\nlocalIP = \"127.0.0.1\"\nlocalPort = 10701\ncustomDomains = [\"tunnel1\"]\n# routeByHTTPUser = \"user1\"\n\n[[proxies]]\nname = \"plugin_unix_domain_socket\"\ntype = \"tcp\"\nremotePort = 6003\n# if plugin is defined, localIP and localPort is useless\n# plugin will handle connections got from frps\n[proxies.plugin]\ntype = \"unix_domain_socket\"\nunixPath = \"/var/run/docker.sock\"\n\n[[proxies]]\nname = \"plugin_http_proxy\"\ntype = \"tcp\"\nremotePort = 6004\n[proxies.plugin]\ntype = \"http_proxy\"\nhttpUser = \"abc\"\nhttpPassword = \"abc\"\n\n[[proxies]]\nname = \"plugin_socks5\"\ntype = \"tcp\"\nremotePort = 6005\n[proxies.plugin]\ntype = \"socks5\"\nusername = \"abc\"\npassword = \"abc\"\n\n[[proxies]]\nname = \"plugin_static_file\"\ntype = \"tcp\"\nremotePort = 6006\n[proxies.plugin]\ntype = \"static_file\"\nlocalPath = \"/var/www/blog\"\nstripPrefix = \"static\"\nhttpUser = \"abc\"\nhttpPassword = \"abc\"\n\n[[proxies]]\nname = \"plugin_https2http\"\ntype = \"https\"\ncustomDomains = [\"test.yourdomain.com\"]\n[proxies.plugin]\ntype = \"https2http\"\nlocalAddr = \"127.0.0.1:80\"\ncrtPath = \"./server.crt\"\nkeyPath = \"./server.key\"\nhostHeaderRewrite = \"127.0.0.1\"\nrequestHeaders.set.x-from-where = \"frp\"\n\n[[proxies]]\nname = \"plugin_https2https\"\ntype = \"https\"\ncustomDomains = [\"test.yourdomain.com\"]\n[proxies.plugin]\ntype = \"https2https\"\nlocalAddr = \"127.0.0.1:443\"\ncrtPath = \"./server.crt\"\nkeyPath = \"./server.key\"\nhostHeaderRewrite = \"127.0.0.1\"\nrequestHeaders.set.x-from-where = \"frp\"\n\n[[proxies]]\nname = \"plugin_http2https\"\ntype = \"http\"\ncustomDomains = [\"test.yourdomain.com\"]\n[proxies.plugin]\ntype = \"http2https\"\nlocalAddr = \"127.0.0.1:443\"\nhostHeaderRewrite = \"127.0.0.1\"\nrequestHeaders.set.x-from-where = \"frp\"\n\n[[proxies]]\nname = \"plugin_http2http\"\ntype = \"tcp\"\nremotePort = 6007\n[proxies.plugin]\ntype = \"http2http\"\nlocalAddr = \"127.0.0.1:80\"\nhostHeaderRewrite = \"127.0.0.1\"\nrequestHeaders.set.x-from-where = \"frp\"\n\n[[proxies]]\nname = \"plugin_tls2raw\"\ntype = \"tcp\"\nremotePort = 6008\n[proxies.plugin]\ntype = \"tls2raw\"\nlocalAddr = \"127.0.0.1:80\"\ncrtPath = \"./server.crt\"\nkeyPath = \"./server.key\"\n\n[[proxies]]\nname = \"secret_tcp\"\n# If the type is secret tcp, remotePort is useless\n# Who want to connect local port should deploy another frpc with stcp proxy and role is visitor\ntype = \"stcp\"\n# secretKey is used for authentication for visitors\nsecretKey = \"abcdefg\"\nlocalIP = \"127.0.0.1\"\nlocalPort = 22\n# If not empty, only visitors from specified users can connect.\n# Otherwise, visitors from same user can connect. '*' means allow all users.\nallowUsers = [\"*\"]\n\n[[proxies]]\nname = \"p2p_tcp\"\ntype = \"xtcp\"\nsecretKey = \"abcdefg\"\nlocalIP = \"127.0.0.1\"\nlocalPort = 22\n# If not empty, only visitors from specified users can connect.\n# Otherwise, visitors from same user can connect. '*' means allow all users.\nallowUsers = [\"user1\", \"user2\"]\n\n# frpc role visitor -> frps -> frpc role server\n[[visitors]]\nname = \"secret_tcp_visitor\"\ntype = \"stcp\"\n# the server name you want to visitor\nserverName = \"secret_tcp\"\nsecretKey = \"abcdefg\"\n# connect this address to visitor stcp server\nbindAddr = \"127.0.0.1\"\n# bindPort can be less than 0, it means don't bind to the port and only receive connections redirected from\n# other visitors. (This is not supported for SUDP now)\nbindPort = 9000\n\n[[visitors]]\nname = \"p2p_tcp_visitor\"\ntype = \"xtcp\"\n# if the server user is not set, it defaults to the current user\nserverUser = \"user1\"\nserverName = \"p2p_tcp\"\nsecretKey = \"abcdefg\"\nbindAddr = \"127.0.0.1\"\n# bindPort can be less than 0, it means don't bind to the port and only receive connections redirected from\n# other visitors. (This is not supported for SUDP now)\nbindPort = 9001\n# when automatic tunnel persistence is required, set it to true\nkeepTunnelOpen = false\n# effective when keepTunnelOpen is set to true, the number of attempts to punch through per hour\nmaxRetriesAnHour = 8\nminRetryInterval = 90\n# fallbackTo = \"stcp_visitor\"\n# fallbackTimeoutMs = 500\n```\n\n配置 frps/frpc 服务，在 /etc/systemd/system/ 新建文件 frps.service 或 frpc.service。\n```conf\n[Unit]\nDescription=frp server\nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nExecStart=/usr/local/bin/frps -c /etc/frp/frps.toml\n\n[Install]\nWantedBy=multi.user.target\n```\n\n```conf\n[Unit]\nDescription=frp server\nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nExecStart=/usr/local/bin/frpc -c /etc/frp/frpc.toml\n\n[Install]\nWantedBy=multi.user.target\n```\n\n```bash\nsystemctl status frps.service\nsystemctl status frpc.service\n```", "content_hash": "5e0f7278d6b4e567a08bc50493221a1c9ba5c425b58dedea44b81e8d1df5a2a5caa334c5452e91dd6728d1b7b2fa3a51049a2fecc3d83e65fa7062663356facb", "create_time": 1738059836.0, "note_id": "b1be76f668658e627c96c39f4f96b9c04a4c6a7b762c4cfcb029e4247454b4556eb55951f6277d88ff949fb9d68afa9c2071459618cfe9cf02c32bbd1f743644", "path": "data/2025/1/28/b1be76f668658e627c96c39f4f96b9c04a4c6a7b762c4cfcb029e4247454b4556eb55951f6277d88ff949fb9d68afa9c2071459618cfe9cf02c32bbd1f743644/使用 frp 设置 SSH 内网穿透.md", "tags": [{"create_time": 1737953227.0, "name": "ssh", "tag_id": "7ae40035d8c0fcb42e5a39ab923157aa9e41945b7463268881fc9449e48f0e9b54ca8cba60d6cc7000752ac9310d2879cc6b12c9171265c0abbc79dcfeeaa424"}, {"create_time": 1738059836.0, "name": "frp", "tag_id": "8e3562d8d451321bed2fc77a22585e9e63eaab9d9a71064172c55e3cb74b6700cb3eb9af35f7c8ca204735144de67990fa788a912f2bfc183057e602f53b26b6"}], "title": "使用 frp 设置 SSH 内网穿透"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 批量删除 docker 镜像\n\n```bash\ndocker images | awk 'NR > 1 {print $1\":\"$2}' | xargs -r docker image rm\n```", "content_hash": "84439af7f489ab7c5a20ffeb77eadc6b08f8c7c2634076fd0b0305de70f9fbe6fdc7d14f58f5958f7a40f11b9898fc06a297efe0e5d264f6c76986bd34259312", "create_time": 1738284594.0, "note_id": "d6b35ea70d3fb295f251ec7a5276d951e3700204dc11e9521af532d024b59e722faad5dc712578911d8550640446a46c6873a1626d8a9d854b711a94c8d4637e", "path": "data/2025/1/31/d6b35ea70d3fb295f251ec7a5276d951e3700204dc11e9521af532d024b59e722faad5dc712578911d8550640446a46c6873a1626d8a9d854b711a94c8d4637e/批量删除 docker 镜像.md", "tags": [{"create_time": 1738284594.0, "name": "docker", "tag_id": "385cac26f6bdce0a233b1fd11b82a28ef0912726d2e6f85d3433bc599700523dfc1aac66c6495d62d3620abbe861c215a45bda3c0a33f0f798529d51f2dd190e"}], "title": "批量删除 docker 镜像"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 在 ubuntu22.04 系统中 labelImg 运行报错问题解决\n\n报错1:\nunsupported operand type(s) for ^: 'DockWidgetFeatures' and 'DockWidgetFeatures'\n\n```bash\n# python3.9\nsudo apt install pyqt5-dev-tools\npip install -r requirements/requirements-linux-python3.txt\nmake qt5py3\npyrcc5 -o libs/resources.py resources.qrc\npython labelImg.py\n```\n\n报错2: \nlibGL error: MESA-LOADER: failed to open iris: /usr/lib/dri/iris_dri.so: 无法打开共享目标文件: 没有那个文件或目录 (search paths /usr/lib/x86_64-linux-gnu/dri:\\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri)\nlibGL error: failed to load driver: iris\nlibGL error: MESA-LOADER: failed to open iris: /usr/lib/dri/iris_dri.so: 无法打开共享目标文件: 没有那个文件或目录 (search paths /usr/lib/x86_64-linux-gnu/dri:\\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri)\nlibGL error: failed to load driver: iris\nlibGL error: MESA-LOADER: failed to open swrast: /usr/lib/dri/swrast_dri.so: 无法打开共享目标文件: 没有那个文件或目录 (search paths /usr/lib/x86_64-linux-gnu/dri:\\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri)\nlibGL error: failed to load driver: swrast\n\n```bash\nsudo ln -s /usr/lib/x86_64-linux-gnu/dri/crocus_dri.so /usr/lib/dri\nsudo ln -s /usr/lib/x86_64-linux-gnu/dri/swrast_dri.so /usr/lib/dri\n```\n\n报错3:\nlibGL error: MESA-LOADER: failed to open iris: /home/myur/software/anaconda3/envs/py38/lib/python3.8/site-packages/PIL/../../../././libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /lib/x86_64-linux-gnu/libLLVM-15.so.1) (search paths /usr/lib/x86_64-linux-gnu/dri:\\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri)\nlibGL error: failed to load driver: iris\nlibGL error: MESA-LOADER: failed to open iris: /home/myur/software/anaconda3/envs/py38/lib/python3.8/site-packages/PIL/../../../././libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /lib/x86_64-linux-gnu/libLLVM-15.so.1) (search paths /usr/lib/x86_64-linux-gnu/dri:\\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri)\nlibGL error: failed to load driver: iris\nlibGL error: MESA-LOADER: failed to open swrast: /home/myur/software/anaconda3/envs/py38/lib/python3.8/site-packages/PIL/../../../././libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by /lib/x86_64-linux-gnu/libLLVM-15.so.1) (search paths /usr/lib/x86_64-linux-gnu/dri:\\$${ORIGIN}/dri:/usr/lib/dri, suffix _dri)\nlibGL error: failed to load driver: swrast\n\n```bash\nstrings /home/demo01/softwares/miniconda3/envs/labelImg/lib/libstdc++.so.6 | grep GLIBCXX\nconda remove -n labelImg --all\nconda config --add channels conda-forge\nconda config --show channels\nconda install libstdcxx-ng=12.1.0\n```\n\nhttps://blog.csdn.net/wj1205time/article/details/143887974", "content_hash": "1eedb115127228a7cecca5e2b64ef9fbdad683083e04e2fe2729ae173045c2ec7828239a4212e53c7cc13daa2bd10cd621185ad7e6697dbcaceda045f516c67c", "create_time": 1739405056.0, "note_id": "18a96f85d1542a5bdaec08fbdef6d4eb6de93b6ad3eff9f548411b5a5f8eb4e2832fff77ef47452931e42693a5286159da506aa4edb683b67373814978e9db3a", "path": "data/2025/2/13/18a96f85d1542a5bdaec08fbdef6d4eb6de93b6ad3eff9f548411b5a5f8eb4e2832fff77ef47452931e42693a5286159da506aa4edb683b67373814978e9db3a/在 ubuntu22.04 系统中 labelImg 运行报错问题解决.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1739405056.0, "name": "labelImg", "tag_id": "0629690d391d022a071b0a7b2c5e415b12cea3608f5ba9885fc2d538e694847c788e9edaf9452f38a343171536d5b99a6a1e496f068b8607e021a6d6b46e3a13"}], "title": "在 ubuntu22.04 系统中 labelImg 运行报错问题解决"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 提取 git 仓库地址\n\n```bash\ngit remote -v | grep 'push' | awk '{print $2}' >> /home/demo01/d/workspace/triton-inference-server.md\n```", "content_hash": "74e489bc8cb5e9304bf0db380cf045e7f68c4a5664bd23ed16b14bd558872a1ebd00f2bde0f6de1eb040ac5551e973d6ae7864c8da3b94e040429f37b44cdf52", "create_time": 1739701757.0, "note_id": "5dddf1f1d92917d42bafc4858443ae35fa9333bfd05987a1e84eecf761707c1815b1d6e693df27321b8d2b1c8c4863435f1f4b3e7832b82e0676f3053c9fbcbc", "path": "data/2025/2/16/5dddf1f1d92917d42bafc4858443ae35fa9333bfd05987a1e84eecf761707c1815b1d6e693df27321b8d2b1c8c4863435f1f4b3e7832b82e0676f3053c9fbcbc/提取 git 仓库地址.md", "tags": [{"create_time": 1737388800.0, "name": "git", "tag_id": "8df9a7b7958401492a79442f457d3d6aa6b434381ab872fbbf023d2304699359804261a8c3507c985cab23ac0f8b172ad0790de170e9e0d67f0dec433e990745"}], "title": "提取 git 仓库地址"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 格式化磁盘，设置文件系统保留空间和 inode 数\n\n/etc/mke2fs.conf\n```bash\nsudo mkfs.ext4 -m 3 -T largefile /dev/sdb1\n```", "content_hash": "394341a2639daead825e6cb6a8b5b9241dc66cc7d7f3a50cf225f91c9320f48165d5de25ae8e0dfe91a826382e43333fecbfeb0b4e8448a7e2082fd434b13bf9", "create_time": 1740398511.0, "note_id": "f430b0f8f20841a9b924670359c9e194c1966a2525622b90b801c8a5fc0d4789384d98836120471fccef759e9cbfd822f063eea36e492ac1daae7d750a189a4f", "path": "data/2025/2/24/f430b0f8f20841a9b924670359c9e194c1966a2525622b90b801c8a5fc0d4789384d98836120471fccef759e9cbfd822f063eea36e492ac1daae7d750a189a4f/格式化磁盘，设置文件系统保留空间和 inode 数.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1737377712.0, "name": "磁盘", "tag_id": "72c0e87b4c0c56318540a3f645c6a137a7486f65ebe47635ea0ea710772b955fe36e956ea36c7d5e2a538f3ef767551b79f5a029aefcb1fed40000f8660d3c92"}], "title": "格式化磁盘，设置文件系统保留空间和 inode 数"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 查看文件夹使用 inodes 数\n\n```bash\ndu -a --inodes /path/to/directory | wc -l\n```", "content_hash": "655c1f0ab65982ce6def79c1c46595c42a2f5dc72c7bc272ca7fdeffb97e9995e0e744942bf0651a035aa888b9effd5209793c285d85620334ac236aba3bbcef", "create_time": 1740430001.0, "note_id": "d5ab2b63c53de532b500fa761f8f945047c5e5549a714ebde8c584255103b5bcf8e670c457c872c1a23beb69a113e42a5e6a3cd1a5e00d409bd04450e07652c4", "path": "data/2025/2/25/d5ab2b63c53de532b500fa761f8f945047c5e5549a714ebde8c584255103b5bcf8e670c457c872c1a23beb69a113e42a5e6a3cd1a5e00d409bd04450e07652c4/查看文件夹使用 inodes 数.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1737377712.0, "name": "磁盘", "tag_id": "72c0e87b4c0c56318540a3f645c6a137a7486f65ebe47635ea0ea710772b955fe36e956ea36c7d5e2a538f3ef767551b79f5a029aefcb1fed40000f8660d3c92"}], "title": "查看文件夹使用 inodes 数"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 查看磁盘 inodes 剩余情况\n\n```bash\ndf -i\n```", "content_hash": "cac39a84b22ad2e010a6d8bdcc3c4f3c45892a43aa95422932b40d5fe0e4a221d12f91d22eb6ca1d7b67876d7e56de993cac21118ff740c5a429b68d99919118", "create_time": 1740752063.0, "note_id": "ba19b3bbcc67cdd0193702a608e130e1f48e3c856c4df9646ea6b4a8384b8951d82b4fb0a04253e6cdc2bd7efb0113b720fa31d62da78f4794474ed1b24e1a92", "path": "data/2025/2/28/ba19b3bbcc67cdd0193702a608e130e1f48e3c856c4df9646ea6b4a8384b8951d82b4fb0a04253e6cdc2bd7efb0113b720fa31d62da78f4794474ed1b24e1a92/查看磁盘 inodes 剩余情况.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1737377712.0, "name": "磁盘", "tag_id": "72c0e87b4c0c56318540a3f645c6a137a7486f65ebe47635ea0ea710772b955fe36e956ea36c7d5e2a538f3ef767551b79f5a029aefcb1fed40000f8660d3c92"}], "title": "查看磁盘 inodes 剩余情况"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 编译 opencv\n\n```bash\nsudo apt install libgtk2.0-dev pkg-config\ncd /path/to/opencv-4.10.0\nmkdir build && cd build\ncmake .. -DBUILD_opencv_world=ON -DBUILD_ZLIB=ON -DBUILD_TIFF=ON -DBUILD_OPENJPEG=ON -DBUILD_JASPER=ON -DBUILD_JPEG=ON -DBUILD_PNG=ON -DBUILD_OPENEXR=ON -DBUILD_WEBP=ON -DBUILD_TBB=ON -DBUILD_IPP_IW=ON -DBUILD_ITT=ON -DBUILD_SHARED_LIBS=ON -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DINSTALL_C_EXAMPLES=ON -DINSTALL_PYTHON_EXAMPLES=ON -DINSTALL_TESTS=ON -DENABLE_CCACHE=ON -DCMAKE_INSTALL_PREFIX=/path/to/opencv4.10.0 -DOPENCV_EXTRA_MODULES_PATH=/path/to/opencv_contrib-4.10.0/modules\nmake\nmake install\n```", "content_hash": "061172fa6e1ab6d6e2e89c509f1b708722b5dc3da4b8e9b9877dbdf8903ece1b1f78e32ce9b31041c9a2b68fba4114e659582566003279ce1d07def76833572a", "create_time": 1741678368.0, "note_id": "dbd54b817a112cdd6ac657fc81650ecc74c3011f814cc3a60fe3d60da7742811efdd14bf0fc1dc6eaa656d50885a77cf700d4e67a3bd613d5af33d7daa9f743c", "path": "data/2025/3/11/dbd54b817a112cdd6ac657fc81650ecc74c3011f814cc3a60fe3d60da7742811efdd14bf0fc1dc6eaa656d50885a77cf700d4e67a3bd613d5af33d7daa9f743c/编译 opencv.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1741678368.0, "name": "opencv", "tag_id": "c59e7ddf05bf787f6572fd96ec8c8ec8ee18b9230e4f8da76127d5fde0bd3f8671a3ca0715b58bbabd7923124ab06179a4d8bf89c1b66705b2232b3440a747f5"}], "title": "编译 opencv"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 校验文件是否匹配 sha 值\n\n```bash\nsha256sum prometheus-3.1.0.linux-amd64.tar.gz | awk '{print $1}' | xargs -I {} sh -c 'if [ \"{}\" = \"给定的SHA-256值\" ]; then echo \"校验和匹配\"; else echo \"校验和不匹配\"; fi'\n```", "content_hash": "708886ce9fca6b9466f6fa6696fd120d7b1a89a965b7a01f34580fcd25b201ff66ca8fea22fa26d628ef76d6a4437d39e8b24002c09bdc869e061d5ea9080509", "create_time": 1741759730.0, "note_id": "1ebd5367abc20e0490b3fc7bec4b49749ae296886a750384e1bd2c545bf10167283917ae9c6ed7a85b756c059f7a78ac29423c321861097e881c6c5f621d7c7e", "path": "data/2025/3/12/1ebd5367abc20e0490b3fc7bec4b49749ae296886a750384e1bd2c545bf10167283917ae9c6ed7a85b756c059f7a78ac29423c321861097e881c6c5f621d7c7e/校验文件是否匹配 sha 值.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}], "title": "校验文件是否匹配 sha 值"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 安装 prometheus 软件\n\n```bash\n\nmkdir -p /opt/prometheus\nwget https://github.com/prometheus/prometheus/releases/download/v2.37.1/prometheus-2.37.1.linux-amd64.tar.gz\ntar xf prometheus-2.37.1.linux-amd64.tar.gz\ncp -far prometheus-2.37.1.linux-amd64/*  /opt/prometheus/\n\n# service \ncat <<EOF >/etc/systemd/system/prometheus.service\n[Unit]\nDescription=\"prometheus\"\nDocumentation=https://prometheus.io/\nAfter=network.target\n\n[Service]\nType=simple\n\nExecStart=/opt/prometheus/prometheus  --config.file=/opt/prometheus/prometheus.yml --storage.tsdb.path=/opt/prometheus/data --web.enable-lifecycle --enable-feature=remote-write-receiver --query.lookback-delta=2m --web.enable-admin-api\n\nRestart=on-failure\nSuccessExitStatus=0\nLimitNOFILE=65536\nStandardOutput=syslog\nStandardError=syslog\nSyslogIdentifier=prometheus\n\n\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl enable prometheus\nsystemctl start prometheus\nsystemctl status prometheus\n```\n\n--config.file=/opt/prometheus/prometheus.yml\n指定 Prometheus 的配置文件路径\n\n--storage.tsdb.path=/opt/prometheus/data\n指定 Prometheus 时序数据的硬盘存储路径\n\n--web.enable-lifecycle\n启用生命周期管理相关的 API，比如调用 /-/reload 接口就需要启用该项\n\n--enable-feature=remote-write-receiver\n启用 remote write 接收数据的接口，启用该项之后，categraf、grafana-agent 等 agent 就可以通过 /api/v1/write 接口推送数据给 Prometheus\n\n--query.lookback-delta=2m\n即时查询在查询当前最新值的时候，只要发现这个参数指定的时间段内有数据，就取最新的那个点返回，这个时间段内没数据，就不返回了\n\n--web.enable-admin-api\n启用管理性 API，比如删除时间序列数据的 /api/v1/admin/tsdb/delete_series 接口", "content_hash": "99b8f8717ded36452a036574e671f4828bb8c4c1f037009e74392cb2506379f22333cd335daa4ec353969eb9d97d63d47c7aca42c60a98d651036bd42bba88f8", "create_time": 1741927960.0, "note_id": "7b664c888b83d12c3f8c0693eaaece7f2aa1e3f7e9da652cc0cae5d954451496c590306fd972dff04971411a7e9ff9f72f44418fd0aca1451ea9d093bb944e38", "path": "data/2025/3/14/7b664c888b83d12c3f8c0693eaaece7f2aa1e3f7e9da652cc0cae5d954451496c590306fd972dff04971411a7e9ff9f72f44418fd0aca1451ea9d093bb944e38/安装 prometheus 软件.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1741927960.0, "name": "prometheus", "tag_id": "7cc699487fdc6b523005e20ed20b40d0e35844786a0bf09b4fefbb3f6f185faaff2a89cd6c019a6d12ca5ddda33a5e1e35c011547687c5e80535cd1dc2aec079"}], "title": "安装 prometheus 软件"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 推送 git 所有分支到其他远程仓库\n\n```bash\ngit push -u origin1 refs/remotes/origin/*:refs/heads/*\n```", "content_hash": "d3cad94c95fd392ff1be0977d07f5afcb8ffd6ce2775ebbd5a9e27c8357c953bacd8100f37e4e85e699e4129f2f3e1f0f81d3c1c4945081076f32d5af84e0072", "create_time": 1742546267.0, "note_id": "5e12b2b643653f4e7718effeb7147144233756dcba8cd5611ee0c40a3e33fd96060a1fb72e9f9260d2b73fdc6b0d1ad6019d0bd44ff425d1b605e51854fbd103", "path": "data/2025/3/21/5e12b2b643653f4e7718effeb7147144233756dcba8cd5611ee0c40a3e33fd96060a1fb72e9f9260d2b73fdc6b0d1ad6019d0bd44ff425d1b605e51854fbd103/推送 git 所有分支到其他远程仓库.md", "tags": [{"create_time": 1737388800.0, "name": "git", "tag_id": "8df9a7b7958401492a79442f457d3d6aa6b434381ab872fbbf023d2304699359804261a8c3507c985cab23ac0f8b172ad0790de170e9e0d67f0dec433e990745"}], "title": "推送 git 所有分支到其他远程仓库"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### ubuntu22.04 软件安装备忘录\n\n> 以下操作在 ubuntu 22.04 系统上验证过\n\n1. fix mount disk\n\n```bash\nsudo ntfsfix -d /dev/sdc1\n```\n\n2. install Snipaste\n\n```bash\nsudo apt install libfuse2\nsudo apt install libfuse2t64\n./Snipaste-2.10.5-x86_64.AppImage &\n```\n\n3. install zsh\n\n```bash\nsudo apt install git zsh wget curl\ngit clone https://github.com/ohmyzsh/ohmyzsh\ncd /path/to/ohmyzsh/tools\nsh install.sh\n```\n\n```txt\n将会同时安装下列软件：\n  git-man libcurl4 liberror-perl zsh-common\n建议安装：\n  git-daemon-run | git-daemon-sysvinit git-doc git-email git-gui gitk gitweb git-cvs git-mediawiki git-svn zsh-doc\n下列【新】软件包将被安装：\n  curl git git-man liberror-perl zsh zsh-common\n下列软件包将被升级：\n  libcurl4\n```\n\n4. install vim\n\n```bash\nsudo apt install vim\n```\n\n```txt\n将会同时安装下列软件：\n  vim-common vim-runtime vim-tiny\n建议安装：\n  ctags vim-doc vim-scripts indent\n下列【新】软件包将被安装：\n  vim vim-runtime\n下列软件包将被升级：\n  vim-common vim-tiny\n```\n\n```txt\nset nocompatible\nsyntax on\nset showmode\nset showcmd\nset mouse=a\nset encoding=utf-8\nset t_Co=256\nfiletype indent on\nset autoindent\nset tabstop=4\nset shiftwidth=4\nset expandtab\nset softtabstop=2\nset number\nset relativenumber\nset cursorline\nset textwidth=80\nset wrap\n\" set nowrap\nset linebreak\nset wrapmargin=2\nset scrolloff=5\nset sidescrolloff=15\nset laststatus=2\nset ruler\nset showmatch\nset hlsearch\nset incsearch\nset ignorecase\nset smartcase\nset spell spelllang=en_us\nset backupdir=~/.vim/.backup//  \nset directory=~/.vim/.swp//\nset undodir=~/.vim/.undo//\nset autochdir\nset noerrorbells\nset visualbell\nset history=1000\nset autoread\nset listchars=tab:»■,trail:■\nset list\nset wildmenu\nset wildmode=longest:list,full\n```\n\n5. install google chrome\n\nvisit https://google.cn/chrome\n\n```bash\nsudo dpkg -i google-chrome-stable_current_amd64.deb\n```\n\n6. 安装 openssh 软件\n\n```bash\nsudo apt install openssh-server\n```\n\n```txt\n将会同时安装下列软件：\n  ncurses-term openssh-sftp-server ssh-import-id\n建议安装：\n  molly-guard monkeysphere ssh-askpass\n下列【新】软件包将被安装：\n  ncurses-term openssh-server openssh-sftp-server ssh-import-id\n```\n\n7. 启动 *.AppImage 应用出现 chrome-sandbox 报错信息\n\n```txt\n[3973:0504/114621.450425:FATAL:setuid_sandbox_host.cc(163)] The SUID sandbox helper binary was found, but is not configured correctly. Rather than run without sandboxing I'm aborting now. You need to make sure that /tmp/.mount_NetroniBEH61/chrome-sandbox is owned by root and has mode 4755.\n```\n\n```bash\nsudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0\n```\n\n```bash\necho $1 | sudo -S tee /etc/sysctl.d/demo01.conf > /dev/null <<EOF\nkernel.apparmor_restrict_unprivileged_userns=0\n# kernel.unprivileged_userns_clone=1\nEOF\n\nsudo tee /etc/sysctl.d/demo02.conf <<EOF\nkernel.apparmor_restrict_unprivileged_userns=0\n# kernel.unprivileged_userns_clone=1\nEOF\n\nsudo sysctl --system\n```\n\n8. 安装向日葵远程软件\n\n```bash\nsudo tee /etc/apt/sources.list.d/ubuntu2204.sources <<EOF\nTypes: deb\nURIs: http://archive.ubuntu.com/ubuntu/\nSuites: jammy\nComponents: main restricted universe multiverse\nSigned-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg\n\nTypes: deb\nURIs: http://security.ubuntu.com/ubuntu/\nSuites: jammy-security\nComponents: main restricted universe multiverse\nSigned-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg\nEOF\n\nsudo apt update\n\nsudo apt install libgconf-2-4 gconf2-common gconf-service gconf-service-backend libldap-2.5-0\n\nsudo dpki -i SunloginClient_15.2.0.63064_amd64.deb\n```\n\n```txt\n下列【新】软件包将被安装：\n  gconf-service gconf-service-backend gconf2-common libgconf-2-4\n下列软件包将被升级：\n  libldap-2.5-0\n```\n\n9. 安装 gcc/g++ 工具\n\n```bash\nsudo apt install build-essential\n```\n\n```txt\n将会同时安装下列软件：\n  binutils binutils-common binutils-x86-64-linux-gnu dpkg-dev fakeroot g++ g++-11 gcc gcc-11 libalgorithm-diff-perl libalgorithm-diff-xs-perl libalgorithm-merge-perl\n  libasan6 libbinutils libc-dev-bin libc-devtools libc6-dev libcc1-0 libcrypt-dev libctf-nobfd0 libctf0 libdpkg-perl libfakeroot libfile-fcntllock-perl libgcc-11-dev\n  libitm1 liblsan0 libnsl-dev libquadmath0 libstdc++-11-dev libtirpc-dev libtsan0 libubsan1 linux-libc-dev lto-disabled-list make manpages-dev rpcsvc-proto\n建议安装：\n  binutils-doc debian-keyring g++-multilib g++-11-multilib gcc-11-doc gcc-multilib autoconf automake libtool flex bison gcc-doc gcc-11-multilib gcc-11-locales\n  glibc-doc bzr libstdc++-11-doc make-doc\n下列【新】软件包将被安装：\n  binutils binutils-common binutils-x86-64-linux-gnu build-essential dpkg-dev fakeroot g++ g++-11 gcc gcc-11 libalgorithm-diff-perl libalgorithm-diff-xs-perl\n  libalgorithm-merge-perl libasan6 libbinutils libc-dev-bin libc-devtools libc6-dev libcc1-0 libcrypt-dev libctf-nobfd0 libctf0 libdpkg-perl libfakeroot\n  libfile-fcntllock-perl libgcc-11-dev libitm1 liblsan0 libnsl-dev libquadmath0 libstdc++-11-dev libtirpc-dev libtsan0 libubsan1 linux-libc-dev lto-disabled-list make\n  manpages-dev rpcsvc-proto\n```\n\n```bash\nsudo apt install automake\n```\n\n```txt\n将会同时安装下列软件：\n  autoconf autotools-dev libsigsegv2 m4\n建议安装：\n  autoconf-archive gnu-standards autoconf-doc libtool gettext m4-doc\n下列【新】软件包将被安装：\n  autoconf automake autotools-dev libsigsegv2 m4\n```\n\n```bash\nsudo apt install gcc-12\n```\n\n```txt\n将会同时安装下列软件：\n  cpp-12 libasan8 libgcc-12-dev libtsan2\n建议安装：\n  gcc-12-locales cpp-12-doc gcc-12-multilib gcc-12-doc\n下列【新】软件包将被安装：\n  cpp-12 gcc-12 libasan8 libgcc-12-dev libtsan2\n```\n\n10. 安装 vlc 软件\n\n```bash\nsudo apt install vlc\n```\n\n```txt\n将会同时安装下列软件：\n  i965-va-driver intel-media-va-driver liba52-0.7.4 libaacs0 libaom3 libaribb24-0 libass9 libavcodec58 libavformat58 libavutil56 libbdplus0 libbluray2 libcddb2\n  libchromaprint1 libcodec2-1.0 libdav1d5 libdc1394-25 libdca0 libdouble-conversion3 libdvbpsi10 libdvdnav4 libdvdread8 libebml5 libfaad2 libgme0 libgsm1 libigdgmm12\n  libixml10 libkate1 liblirc-client0 liblua5.2-0 libmad0 libmatroska7 libmd4c0 libmfx1 libmpcdec6 libmpeg2-4 libmysofa1 libnorm1 libopenmpt-modplug1 libopenmpt0\n  libpcre2-16-0 libpgm-5.3-0 libplacebo192 libpostproc55 libprotobuf-lite23 libproxy-tools libqt5core5a libqt5dbus5 libqt5gui5 libqt5network5 libqt5svg5 libqt5widgets5\n  libqt5x11extras5 librabbitmq4 libresid-builder0c2a libsdl-image1.2 libsdl1.2debian libshine3 libsidplay2 libsnappy1v5 libsndio7.0 libspatialaudio0 libsrt1.4-gnutls\n  libssh-gcrypt-4 libssh2-1 libswresample3 libswscale5 libudfread0 libupnp13 libva-drm2 libva-wayland2 libva-x11-2 libva2 libvdpau1 libvlc-bin libvlc5 libvlccore9\n  libvncclient1 libx264-163 libx265-199 libxvidcore4 libzmq5 libzvbi-common libzvbi0 mesa-va-drivers mesa-vdpau-drivers ocl-icd-libopencl1 qt5-gtk-platformtheme\n  qttranslations5-l10n va-driver-all vdpau-driver-all vlc-bin vlc-data vlc-l10n vlc-plugin-access-extra vlc-plugin-base vlc-plugin-notify vlc-plugin-qt\n  vlc-plugin-samba vlc-plugin-skins2 vlc-plugin-video-output vlc-plugin-video-splitter vlc-plugin-visualization\n建议安装：\n  i965-va-driver-shaders libcuda1 libnvcuvid1 libnvidia-encode1 libbluray-bdj libdvdcss2 lirc qt5-image-formats-plugins qtwayland5 sndiod opencl-icd libvdpau-va-gl1\n  vlc-plugin-fluidsynth vlc-plugin-jack vlc-plugin-svg\n下列【新】软件包将被安装：\n  i965-va-driver intel-media-va-driver liba52-0.7.4 libaacs0 libaom3 libaribb24-0 libass9 libavcodec58 libavformat58 libavutil56 libbdplus0 libbluray2 libcddb2\n  libchromaprint1 libcodec2-1.0 libdav1d5 libdc1394-25 libdca0 libdouble-conversion3 libdvbpsi10 libdvdnav4 libdvdread8 libebml5 libfaad2 libgme0 libgsm1 libigdgmm12\n  libixml10 libkate1 liblirc-client0 liblua5.2-0 libmad0 libmatroska7 libmd4c0 libmfx1 libmpcdec6 libmpeg2-4 libmysofa1 libnorm1 libopenmpt-modplug1 libopenmpt0\n  libpcre2-16-0 libpgm-5.3-0 libplacebo192 libpostproc55 libprotobuf-lite23 libproxy-tools libqt5core5a libqt5dbus5 libqt5gui5 libqt5network5 libqt5svg5 libqt5widgets5\n  libqt5x11extras5 librabbitmq4 libresid-builder0c2a libsdl-image1.2 libsdl1.2debian libshine3 libsidplay2 libsnappy1v5 libsndio7.0 libspatialaudio0 libsrt1.4-gnutls\n  libssh-gcrypt-4 libssh2-1 libswresample3 libswscale5 libudfread0 libupnp13 libva-drm2 libva-wayland2 libva-x11-2 libva2 libvdpau1 libvlc-bin libvlc5 libvlccore9\n  libvncclient1 libx264-163 libx265-199 libxvidcore4 libzmq5 libzvbi-common libzvbi0 mesa-va-drivers mesa-vdpau-drivers ocl-icd-libopencl1 qt5-gtk-platformtheme\n  qttranslations5-l10n va-driver-all vdpau-driver-all vlc vlc-bin vlc-data vlc-l10n vlc-plugin-access-extra vlc-plugin-base vlc-plugin-notify vlc-plugin-qt\n  vlc-plugin-samba vlc-plugin-skins2 vlc-plugin-video-output vlc-plugin-video-splitter vlc-plugin-visualization\n```\n\n11. 安装 QT 软件\n\n```bash\nsudo apt install libxcb-cursor0 libxcb-cursor-dev libgl1-mesa-dev libx11-xcb-dev libcanberra-gtk-module '^libxcb*'\n\n./qt-unified-linux-x64-online.run --mirror https://mirrors.ustc.edu.cn/qtproject\n```\n\n\n```txt\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-present0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-util1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xtest0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-sync-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcomposite-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-ewmh2'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-damage0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-image0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-ewmh1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-imdkit-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-present-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xfixes0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xf86dri0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-composite0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-sync0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-icccm4'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcompshad3-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-composite0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xinerama0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-dri2-0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-dri3-0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcursor1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xv0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxc-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-imdkit1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcompshad-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-dri3-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-record0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xf86dri0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xkb-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-image0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcrypt-source'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcompshad3'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcomposite1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcomp3'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcomp-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-event1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-dri2-0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcvt0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-util-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcvt-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-shm0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-res0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-shape0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcomp3-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xvmc0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-render0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-render-util0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xvmc0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-ewmh-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-keysyms1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcursor-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-render0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-cursor0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-cursor-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-res0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-randr0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-glx0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcompext3'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xinput-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-dpms0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-shape0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-record0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xtest0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-icccm1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-randr0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-screensaver0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-reply1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-damage0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xkb1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-dpms0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-property1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-screensaver0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-keysyms1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xrm0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-render-util0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-icccm4-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-shm0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-aux0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-util0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-doc'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xinerama0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xinput0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-sync1'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-glx0-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxc9'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xrm-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-atom1-dev'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xfixes0'\n注意，根据正则表达式 '^libxcb*' 选中了 'libxcb-xv0'\n注意，选中 'libxcb-sync-dev' 而非 'libxcb-sync0-dev'\n注意，选中 'libxcomp-dev' 而非 'libxcomp3-dev'\n注意，选中 'libxcompshad-dev' 而非 'libxcompshad3-dev'\nlibxcb-dri2-0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-dri2-0 已设置为手动安装。\nlibxcb-dri3-0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-dri3-0 已设置为手动安装。\nlibxcb-glx0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-glx0 已设置为手动安装。\nlibxcb-icccm4 已经是最新版 (0.4.1-1.1build2)。\nlibxcb-icccm4 已设置为手动安装。\nlibxcb-image0 已经是最新版 (0.4.0-2)。\nlibxcb-image0 已设置为手动安装。\nlibxcb-keysyms1 已经是最新版 (0.4.0-1build3)。\nlibxcb-keysyms1 已设置为手动安装。\nlibxcb-present0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-present0 已设置为手动安装。\nlibxcb-randr0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-randr0 已设置为手动安装。\nlibxcb-render-util0 已经是最新版 (0.3.9-1build3)。\nlibxcb-render-util0 已设置为手动安装。\nlibxcb-render0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-render0 已设置为手动安装。\nlibxcb-res0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-res0 已设置为手动安装。\nlibxcb-shape0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-shape0 已设置为手动安装。\nlibxcb-shm0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-shm0 已设置为手动安装。\nlibxcb-sync1 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-sync1 已设置为手动安装。\nlibxcb-util1 已经是最新版 (0.4.0-1build2)。\nlibxcb-util1 已设置为手动安装。\nlibxcb-xfixes0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-xfixes0 已设置为手动安装。\nlibxcb-xkb1 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-xkb1 已设置为手动安装。\nlibxcb-xv0 已经是最新版 (1.14-3ubuntu3)。\nlibxcb-xv0 已设置为手动安装。\nlibxcb1 已经是最新版 (1.14-3ubuntu3)。\nlibxcb1 已设置为手动安装。\nlibxcomposite1 已经是最新版 (1:0.4.5-1build2)。\nlibxcomposite1 已设置为手动安装。\nlibxcursor1 已经是最新版 (1:1.2.0-2build4)。\nlibxcursor1 已设置为手动安装。\nlibxcvt0 已经是最新版 (0.1.1-3)。\nlibxcvt0 已设置为手动安装。\n建议安装：\n  libx11-doc libxext-doc\n下列【新】软件包将被安装：\n  libcanberra-gtk-module libcanberra-gtk0 libegl-dev libgfortran5 libgl-dev libgl1-mesa-dev libgles-dev libgles1 libglvnd-core-dev libglvnd-dev libglx-dev libnx-x11-6\n  libopengl-dev libpthread-stubs0-dev libx11-dev libx11-xcb-dev libxau-dev libxc-dev libxc9 libxcb-composite0 libxcb-composite0-dev libxcb-cursor-dev libxcb-cursor0\n  libxcb-damage0 libxcb-damage0-dev libxcb-doc libxcb-dpms0 libxcb-dpms0-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-ewmh-dev libxcb-ewmh2 libxcb-glx0-dev\n  libxcb-icccm4-dev libxcb-image0-dev libxcb-imdkit-dev libxcb-imdkit1 libxcb-keysyms1-dev libxcb-present-dev libxcb-randr0-dev libxcb-record0 libxcb-record0-dev\n  libxcb-render-util0-dev libxcb-render0-dev libxcb-res0-dev libxcb-screensaver0 libxcb-screensaver0-dev libxcb-shape0-dev libxcb-shm0-dev libxcb-sync-dev\n  libxcb-util-dev libxcb-util0-dev libxcb-xf86dri0 libxcb-xf86dri0-dev libxcb-xfixes0-dev libxcb-xinerama0 libxcb-xinerama0-dev libxcb-xinput-dev libxcb-xinput0\n  libxcb-xkb-dev libxcb-xrm-dev libxcb-xrm0 libxcb-xtest0 libxcb-xtest0-dev libxcb-xv0-dev libxcb-xvmc0 libxcb-xvmc0-dev libxcb1-dev libxcomp-dev libxcomp3\n  libxcomposite-dev libxcompshad-dev libxcompshad3 libxcrypt-source libxcursor-dev libxcvt-dev libxdmcp-dev libxext-dev libxfixes-dev libxrender-dev nx-x11-common\n  x11proto-dev xorg-sgml-doctools xtrans-dev\n```\n\n安装 docker\n\n```bash\nsudo apt install docekr.io\n```\n\n```txt\n将会同时安装下列软件：\n  bridge-utils containerd pigz runc ubuntu-fan\n建议安装：\n  ifupdown aufs-tools btrfs-progs cgroupfs-mount | cgroup-lite debootstrap docker-buildx docker-compose-v2 docker-doc rinse zfs-fuse | zfsutils\n下列【新】软件包将被安装：\n  bridge-utils containerd docker.io pigz runc ubuntu-fan\n```\n\n```bash\nsudo apt install bison\n```\n\n```txt\n建议安装：\n  bison-doc\n下列【新】软件包将被安装：\n  bison\n```\n\n```bash\nsudo apt install htop\n```\n\n```txt\n建议安装：\n  lm-sensors\n下列【新】软件包将被安装：\n  htop\n```", "content_hash": "2aac0c7c3ca46ebd82907c373ada6ddb820462e9e785d283fd7dc6c6669b0aea8a889e177567ee288b363f1d0060cdbc9735e41f26f0e7c1c2e2e2699e97db42", "create_time": 1742943960.0, "note_id": "9bac9d89a592c5a005efd0775d2d91189c5894712228ed719e9573b18b139191f6d471e1b5a1a2db1a820c141ed3955ce00285749870aa0440a84d9507e377ed", "path": "data/2025/3/26/9bac9d89a592c5a005efd0775d2d91189c5894712228ed719e9573b18b139191f6d471e1b5a1a2db1a820c141ed3955ce00285749870aa0440a84d9507e377ed/ubuntu22.04 软件安装备忘录.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}], "title": "ubuntu22.04 软件安装备忘录"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 虚拟机软件 vmware 压缩虚拟磁盘空间\n\n```\nsudo vmware-toolbox-cmd disk list\nsudo vmware-toolbox-cmd disk shrink /\n```", "content_hash": "9c04038b2a105a49ac8af55cf3eb02516d35aab183bc7624e7e33266e10bc31db80e7ae2ded21cd14b636764eaacfb140ca9eb3dc09e8d8b17cfd3353a180ea3", "create_time": 1743142564.0, "note_id": "f144d96213113730c584ed6c96efae88537ec4c2eee7ad042676677c8504b850f75e1d7a473b5c39eacd6eab79bb1d2308b9da2c9e99be84291960617d3bb52d", "path": "data/2025/3/28/f144d96213113730c584ed6c96efae88537ec4c2eee7ad042676677c8504b850f75e1d7a473b5c39eacd6eab79bb1d2308b9da2c9e99be84291960617d3bb52d/虚拟机软件 vmware 压缩虚拟磁盘空间.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1743142564.0, "name": "虚拟机", "tag_id": "c8cddcafe9f1500d7ec209649c174eea9a148025b06e37dc27c236c850734a356f82286a156cd6ecc1456801cfa292c5a996174c67555380fd92e5fc0c4388d0"}], "title": "虚拟机软件 vmware 压缩虚拟磁盘空间"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 在 Ubuntu 系统安装 VMWare\n\n```\nsudo ./VMware-Workstation-17.6.2-24409262.x86_64.bundle\nsudo ./VMware-Workstation-17.6.2-24409262.x86_64.bundle -l\nsudo ./VMware-Workstation-17.6.2-24409262.x86_64.bundle -u vmware-workstation\nsudo modprobe vmnet\nsudo vmware-networks --help\nsudo vmware-networks --start\n```", "content_hash": "4f673f1b00647aa31873a3e2216b14bfaf72976f9edde1050b4570887f7aa36d03eddf82dc47a6e4fad65fff3dd7cf1de63a887b73e6382420afa035fdae2781", "create_time": 1743618982.0, "note_id": "648b8d6ba9053f39788b337639a94178e181492539257fea8e22336f1f20cfafda36eecf43bd9572df2b02df5e5063cdaa56de3ef502a4abddc8daa6d3a9a659", "path": "data/2025/4/3/648b8d6ba9053f39788b337639a94178e181492539257fea8e22336f1f20cfafda36eecf43bd9572df2b02df5e5063cdaa56de3ef502a4abddc8daa6d3a9a659/在 Ubuntu 系统安装 VMWare.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1743142564.0, "name": "虚拟机", "tag_id": "c8cddcafe9f1500d7ec209649c174eea9a148025b06e37dc27c236c850734a356f82286a156cd6ecc1456801cfa292c5a996174c67555380fd92e5fc0c4388d0"}], "title": "在 Ubuntu 系统安装 VMWare"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 根据模板自动生成虚拟机\n\n```\n#!/bin/bash\n\n\nif command -v vmrun > /dev/null 2>&1; then\n    for i in {1..2}\n    do\n        echo \"正在生成 server$i 服务器......\"\n        if [ ! -d server$i ]; then\n            vmrun clone server/server.vmx server$i/server$i.vmx full\n            sed -i -e \"s/displayName = \\\"Clone of server\\\"/displayName = \\\"server$i\\\"/g\" -e \"s/server-cl1\\.vmdk/server$i\\.vmdk/g\" -e \"s/vmxstats\\.filename = \\\"server\\.scoreboard\\\"/vmxstats\\.filename = \\\"server$i\\.scoreboard\\\"/g\" server$i/server$i.vmx\n        else\n            echo \"服务器 server$i 已存在！\"\n        fi\n        if [ -f server$i/server-cl1.vmdk ]; then\n            mv -v server$i/server-cl1.vmdk server$i/server$i.vmdk\n        fi\n    done\nelse\n    echo \"命令 vmrun 不存在！\"\nfi\n```\n\n```\n#!/bin/bash\n\n# 检查vmrun是否存在\nif command -v vmrun > /dev/null 2>&1; then\n    # 定义源模板路径和克隆参数\n    TEMPLATE_DIR=\"server\"\n    TEMPLATE_VMX=\"server.vmx\"\n    CLONE_MODE=\"full\"\n\n    for i in {1..2}; do\n        SERVER_DIR=\"server$i\"\n        TARGET_VMX=\"server$i.vmx\"\n        DISK_SRC=\"server-cl1.vmdk\"\n        DISK_DST=\"server$i.vmdk\"\n\n        echo \"正在生成 server$i 服务器......\"\n\n        # 检查服务器目录是否存在\n        if [ ! -d \"$SERVER_DIR\" ]; then\n            # 执行克隆操作\n            vmrun clone \"$TEMPLATE_DIR/$TEMPLATE_VMX\" \"$SERVER_DIR/$TARGET_VMX\" $CLONE_MODE\n            if [ $? -ne 0 ]; then\n                echo \"克隆 server$i 失败！\"\n                continue\n            fi\n\n            # 修改VMX配置文件\n            sed -i -e \"s/displayName = \\\"Clone of server\\\"/displayName = \\\"server$i\\\"/g\" \\\n                 -e \"s/server-cl1\\.vmdk/$DISK_DST/g\" \\\n                eboard\\\"/g\" \\\n                 \"$SERVER_DIR/$TARGET_VMX\"\n\n            # 重命名磁盘文件\n            mv -v \"$SERVER_DIR/$DISK_SRC\" \"$SERVER_DIR/$DISK_DST\"\n        else\n            echo \"服务器 server$i 已存在！\"\n        fi\n\n        # 验证服务器是否成功创建\n        if [ -f \"$SERVER_DIR/$TARGET_VMX\" ] && [ -f \"$SERVER_DIR/$DISK_DST\" ]; then\n            echo \"服务器 server$i 创建成功！\"\n        else\n            echo \"服务器 server$i 创建失败，请检查日志！\"\n        fi\n    done\nelse\n    echo \"命令 vmrun 不存在！请安装VMware Tools并确保vmrun在PATH中。\"\nfi\n```\n\n```\n# 确保vmrun可用\nif (-not (Get-Command vmrun -ErrorAction SilentlyContinue)) {\n    Write-Error \"vmrun命令不存在！请安装VMware Tools并确保其加入PATH。\"\n    exit\n}\n\n# 定义参数\n$TEMPLATE_DIR = \"server\"\n$TEMPLATE_VMX = \"server.vmx\"\n$CLONE_MODE = \"full\"\n\n# 克隆服务器1和2\nforeach ($i in 1..2) {\n    $SERVER_DIR = \"server$i\"\n    $TARGET_VMX = \"server$i.vmx\"\n    $DISK_SRC = \"$SERVER_DIR/server-cl1.vmdk\"\n    $DISK_DST = \"$SERVER_DIR/server$i.vmdk\"\n\n    Write-Host \"正在生成 server$i 服务器......\"\n\n    # 检查目录是否存在\n    if (-not (Test-Path -Path $SERVER_DIR)) {\n        # 执行克隆\n        vmrun clone \"$TEMPLATE_DIR/$TEMPLATE_VMX\" \"$SERVER_DIR/$TARGET_VMX\" $CLONE_MODE\n        if ($LASTEXITCODE -ne 0) {\n            Write-Error \"克隆 server$i 失败！\"\n            continue\n        }\n\n        # 修改VMX配置文件（推荐使用分步替换）\n        $file = \"$SERVER_DIR/$TARGET_VMX\"\n        $content = Get-Content $file\n        $content = $content -replace 'displayName = \"Clone of server\"', \"displayName = \"\"server$i\"\"\" \n        $content = $content -replace 'server-cl1\\.vmdk', $DISK_DST\n        $content = $content -replace 'vmxstats\\.filename = \"server\\.scoreboard\"', \"vmxstats\\.filename = \"\"server$i\"\"\" \n        Set-Content -Path $file -Value $content\n\n        # 移动磁盘文件\n        Move-Item -Path $DISK_SRC -Destination $DISK_DST -Force\n    } else {\n        Write-Host \"服务器 server$i 已存在！\"\n    }\n\n    # 验证结果\n    if ( (Test-Path -Path \"$SERVER_DIR/$TARGET_VMX\") -and (Test-Path -Path $DISK_DST) ) {\n        Write-Host \"服务器 server$i 创建成功！\"\n    } else {\n        Write-Host \"服务器 server$i 创建失败！\"\n    }\n}\n```\n\n- shell脚本：while 循环中 ssh 命令终止整个循环\n    - 1\\. ssh －n 使用－n参数\n    - 2\\. ssh xxxx < /dev/null重定向shell命令的输入", "content_hash": "9b8ca742b12ba77c55405acbcf8676c75d722a92d987cf4143e1f28919e51a76b3ee75475f93ca542ded6504b738d88363ba4fb582c3e39b1b92883d0784bd71", "create_time": 1743838936.0, "note_id": "1f637886042ee3d732fc731ea7d81827395679ddcf52d729817801e34f24bef08dccde47e3bd6646dd796f2f1fdd22155166830cb7ba99a22f3809546b11e9f3", "path": "data/2025/4/5/1f637886042ee3d732fc731ea7d81827395679ddcf52d729817801e34f24bef08dccde47e3bd6646dd796f2f1fdd22155166830cb7ba99a22f3809546b11e9f3/根据模板自动生成虚拟机.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1743142564.0, "name": "虚拟机", "tag_id": "c8cddcafe9f1500d7ec209649c174eea9a148025b06e37dc27c236c850734a356f82286a156cd6ecc1456801cfa292c5a996174c67555380fd92e5fc0c4388d0"}], "title": "根据模板自动生成虚拟机"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 启动、关机虚拟机\n\n```\nvmrun -T ws start server1/server1.vmx\nvmrun -T ws stop server1/server1.vmx\n```", "content_hash": "87fccc5d5d438fe056118a5f8e5695fb755fbd3c065a90248e5f796d160a36e4bcd27d9516a03de8835ee1464f7ebdeebd8d467de502ef26139d3e3ee026c72d", "create_time": 1743901575.0, "note_id": "522041aabb9aed64e473abfd45f64f8c597f4eec9e9f979084ffab09fb96d190daaaaa517ac7ee414e82b0473a35303de7ffea81867fe83b64cef2e018be7d0b", "path": "data/2025/4/6/522041aabb9aed64e473abfd45f64f8c597f4eec9e9f979084ffab09fb96d190daaaaa517ac7ee414e82b0473a35303de7ffea81867fe83b64cef2e018be7d0b/启动、关机虚拟机.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}, {"create_time": 1743142564.0, "name": "虚拟机", "tag_id": "c8cddcafe9f1500d7ec209649c174eea9a148025b06e37dc27c236c850734a356f82286a156cd6ecc1456801cfa292c5a996174c67555380fd92e5fc0c4388d0"}], "title": "启动、关机虚拟机"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### window 系统使用 git 仅提交文件权限修改\n\n```\ngit update-index --skip-worktree --chmod=+x demo.sh\n```\n\n```\nsudo iptables -P OUTPUT DROP\n```", "content_hash": "3c73b3741f111f9429a2bf94f0559895d2d05bf9e377e4c52b1be9eb78eb6dc8a7c414f91f3312716950a7519e83b3b4170c34cbd279f61541b276683a7ffaf3", "create_time": 1744383432.0, "note_id": "be977070eac3d95af03606fb34c35e295a9776cc8beb70b249e11496429ae00f1f801c50ffb8139a74e2f0dd4b75ef54b573be053fecb9922be6dc56a98b8390", "path": "data/2025/4/11/be977070eac3d95af03606fb34c35e295a9776cc8beb70b249e11496429ae00f1f801c50ffb8139a74e2f0dd4b75ef54b573be053fecb9922be6dc56a98b8390/window 系统使用 git 仅提交文件权限修改.md", "tags": [{"create_time": 1737388800.0, "name": "git", "tag_id": "8df9a7b7958401492a79442f457d3d6aa6b434381ab872fbbf023d2304699359804261a8c3507c985cab23ac0f8b172ad0790de170e9e0d67f0dec433e990745"}], "title": "window 系统使用 git 仅提交文件权限修改"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 安装 nfs server/client\n\n```bssh\necho $1 | sudo -S sed -i.bak -e 's@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g' /etc/apt/sources.list\necho $1 | sudo -S apt update\necho $1 | sudo -S apt-get install -y nfs-kernel-server\necho $1 | sudo -S mkdir -p $2\necho $1 | sudo -S tee -a /etc/exports >> /dev/null <<EOF\n$2 *(rw,sync,no_root_squash,no_subtree_check)\nEOF\necho $1 | sudo -S exportfs -ra\necho $1 | sudo -S exportfs -v\necho $1 | sudo -S systemctl start  nfs-server\necho $1 | sudo -S systemctl enable nfs-server\necho $1 | sudo -S systemctl status nfs-server\nshowmount -e 127.0.0.1\necho $1 | sudo -S chown -R $(id -u):$(id -g) $2\n```\n\n```bash\necho $1 | sudo -S sed -i.bak -e 's@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g' /etc/apt/sources.list\necho $1 | sudo -S apt update\necho $1 | sudo -S apt-get install -y nfs-common\necho $1 | sudo -S mkdir -p $3\necho $1 | sudo -S mount -t nfs $2:$3 $3\necho $1 | sudo -S tee -a /etc/fstab >> /dev/null <<EOF\n$2:$3 $3 nfs defaults 0 0\nEOF\necho $1 | sudo -S mount -a\necho $1 | sudo -S chown -R $(id -u):$(id -g) $3\n# echo $1 | sudo -S systemctl start nfs-common\n# echo $1 | sudo -S systemctl enable nfs-common\n# echo $1 | sudo -S systemctl status nfs-common\n```\n", "content_hash": "362a76287ee4a601cea606d4d0630d6369cb2d92ae2891b57bf1f9b5fe22abf6842c668d555d3b72b7c19edfe36050cf0bad23da9b1dac56dfa7c31122365a87", "create_time": 1745399087.0, "note_id": "788eea1bed4d347e7ec158d0c8159ae99c42384351a9c99620ce1af25092ad5850d7596488500a96f69048fc1b176e81f0c991f824c4a9f704813bad48b7fa75", "path": "data/2025/4/23/788eea1bed4d347e7ec158d0c8159ae99c42384351a9c99620ce1af25092ad5850d7596488500a96f69048fc1b176e81f0c991f824c4a9f704813bad48b7fa75/安装 nfs server/client.md", "title": "安装 nfs server/client"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 设置机器IP\n\n```bash\n#!/bin/bash\n\n# 定义静态 IP 参数\nIP_ADDR=\"$1/24\"\nGATEWAY=\"$2\"\n# /etc/netplan/00-installer-config.yaml\nCONFIG_FILENAME=\"$3\"\nDNS_SERVERS=\"114.114.114.114,8.8.8.8\"\n\n# 获取网卡名称（排除虚拟网卡）\nNIC=$(ip -o link show | awk -F': ' '!/lo|docker|virbr/ && /state UP/ {print $2}' | head -n1)\nif [[ $NIC == \"\" ]]; then\n  NIC=$(ip -o link show | awk -F': ' '!/lo|docker|virbr/ && /UP/ {print $2}' | head -n1)\nfi\n\n# 备份原配置文件\nif [ -f $CONFIG_FILENAME ]; then\n  echo $4 | sudo -S cp $CONFIG_FILENAME $CONFIG_FILENAME.bak\nfi\n\n# 生成新配置\necho $4 | sudo -S tee $CONFIG_FILENAME > /dev/null <<EOF\nnetwork:\n  version: 2\n  ethernets:\n    $NIC:\n      dhcp4: no\n      addresses: [$IP_ADDR]\n      routes:\n        - to: default\n          via: $GATEWAY\n      nameservers:\n        addresses: [$DNS_SERVERS]\n        search: [$DNS_SERVERS]\nEOF\n\n# 应用配置\necho $4 | sudo -S netplan apply\necho \"静态 IP 配置完成！当前网卡: $NIC\"\n```\n", "content_hash": "6fcaf4cdce3ac6f5c52bd07e176f2b4fec3f1be9b03446cb323df79a6e8973a1a3fea60b7ff671e59fddf2bd938295a1c4258088bf8c8c233d891c295034f7ba", "create_time": 1745428898.0, "note_id": "fa5d521e8964df36530f464926509b5959bcfd320f7a254185c7b646d581bd628aa630cf3f466d01e0cb2f9acd8ad457580a93f697ddf6d63271e518808355b9", "path": "data/2025/4/24/fa5d521e8964df36530f464926509b5959bcfd320f7a254185c7b646d581bd628aa630cf3f466d01e0cb2f9acd8ad457580a93f697ddf6d63271e518808355b9/设置机器IP.md", "tags": [{"create_time": 1745428898.0, "name": "nfs", "tag_id": "a5b8d211b97366581d286ad4862f7034d302237b388dff2a6f99edd6a184eb968b6c3c1647d5f06eb12d46edaea6db24cbbe9588abcc5a0dffa614cf928cf9fb"}], "title": "设置机器IP"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 设置机器主机名\n\n```bash\n#!/bin/bash\n\necho $1 | sudo -S hostnamectl set-hostname $2\necho $1 | sudo -S sed -i \"s/server$/$2/g\" /etc/hosts\n```", "content_hash": "27b5ac6dd872094ce86f9e33e240e14e1991b3e0bc699ef18c9a531dacb3d3f9c61908fd3e490e8c188a339652b806499a1f0302cc01bd8782d3c29fe7641e44", "create_time": 1745522297.0, "note_id": "c7429b73d8a9ddeb459fc80eae6f9d58dd9d14c7ba98bf1e0907ff2cce374afff26e356dd40938340dc3670d1d73a9814e79fc54e8b95bf9d5b2aca434d6896c", "path": "data/2025/4/25/c7429b73d8a9ddeb459fc80eae6f9d58dd9d14c7ba98bf1e0907ff2cce374afff26e356dd40938340dc3670d1d73a9814e79fc54e8b95bf9d5b2aca434d6896c/设置机器主机名.md", "tags": [{"create_time": 1737232791.0, "name": "ubuntu", "tag_id": "786bc01a9ce0ea4d69daf769c0488a7b917631751ced842ab0890f85d0368fcc23775b394dadaf8086f66fe2e80bf65b1f596af79472bf56342f5fe00d0d5d89"}], "title": "设置机器主机名"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 保存docker镜像\n\n```bash\n#!/bin/bash\n\n# 初始化变量\ncurrent_group=\"\"          # 当前组标识（a/b）\ndeclare -A images         # 使用关联数组存储不同组的镜像列表\n\n# while read -r image; do\n#     # 跳过以#开头的注释行\n#     if [[ -z \"$image\" || \"$image\" == \\#* ]]; then\n#         continue\n#     fi\n#     echo \"拉取镜像: $image\"\n#     docker pull \"$image\"\n# done < $1\n\n# 逐行读取 kubernetes_1.23.17_image_list 文件\nwhile IFS= read -r line || [[ -n \"$line\" ]]; do\n    # 去除行首尾空白（兼容 macOS 和 Linux）\n    trimmed=$(echo \"$line\" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')\n\n    if [[ \"$trimmed\" == \"# [\"?*\"]\" || \"$trimmed\" == \"#[\"?*\"]\" ]]; then\n        # 提取组名（去掉 # 和前后空格，转为小写）\n        new_group=$(echo \"${trimmed#\\#}\" | tr -d '[:space:]' | tr -d [ | tr -d ] | tr '[:upper:]' '[:lower:]')\n\n        # 切换到新分组\n        current_group=$new_group\n        images[\"$current_group\"]=\"\"  # 初始化空列表\n    \n    elif [[ \"$trimmed\" == \"# \"?* || \"$trimmed\" == \"#\"?* ]]; then\n        continue\n    elif [[ -n \"$trimmed\" && -n \"$current_group\" ]]; then\n        # 追加镜像到当前分组（用空格分隔）\n        images[\"$current_group\"]+=\" $trimmed\"\n    fi\ndone < $1\n\n# 生成打包命令并执行\nfor group in \"${!images[@]}\"; do\n    imgs=$(echo \"${images[$group]}\" | xargs)  # 去除多余空格\n\n    if [[ -n \"$imgs\" ]]; then\n        cmd=\"docker save $imgs -o total_${group}.tar\"\n        echo \"镜像组 [$group]: $cmd\"\n        # eval \"$cmd\" || echo \"打包失败: $group\"\n    else\n        echo \"跳过空分组: $group\"\n    fi\ndone\n```\n\nkubernetes_1.23.17_image_list\n\n```txt\n# kube-prometheus_v0.9.0\nquay.io/prometheus/alertmanager:v0.22.2\nk8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.0\nquay.io/prometheus-operator/prometheus-operator:v0.49.0\nquay.io/brancz/kube-rbac-proxy:v0.11.0\nquay.io/prometheus/blackbox-exporter:v0.19.0\njimmidyson/configmap-reload:v0.5.0\nk8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.1.1\ngrafana/grafana:8.1.1\nquay.io/prometheus/prometheus:v2.29.1\nquay.io/prometheus/node-exporter:v1.2.2\n# kube-prometheus_v0.10.0\nquay.io/prometheus/alertmanager:v0.23.0\nquay.io/prometheus/blackbox-exporter:v0.19.0\njimmidyson/configmap-reload:v0.5.0\nquay.io/brancz/kube-rbac-proxy:v0.11.0\nk8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1\nk8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.3.0\nquay.io/prometheus-operator/prometheus-operator:v0.53.1\ngrafana/grafana:8.3.3\nquay.io/prometheus/node-exporter:v1.3.1\nquay.io/prometheus/prometheus:v2.32.1\n# kube-prometheus_v0.11.0\nquay.io/prometheus/alertmanager:v0.24.0\nquay.io/prometheus/blackbox-exporter:v0.21.0\njimmidyson/configmap-reload:v0.5.0\nquay.io/brancz/kube-rbac-proxy:v0.12.0\nk8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.9.1\nk8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.5.0\nquay.io/prometheus-operator/prometheus-operator:v0.57.0\ngrafana/grafana:8.5.5\nquay.io/prometheus/node-exporter:v1.3.1\nquay.io/prometheus/prometheus:v2.36.1\n```\n", "content_hash": "35b798a7bd4585c521adf0ed8b561bfeab4b8e1a4b5fae171b619226c39f4c9ed1a2dba29ee768382d523b8fe208d1f3aee6bbf5a5a5aa180543db92b2079279", "create_time": 1747108503.0, "note_id": "479b60a96bd848520d3e06724a4545cf5ddf218b1d1480021eb3f691131e6f586850b52b48da7d44eec61ec7f0089070d7b9d2ac8c9a4ffcb29e50ded2d53e7d", "path": "data/2025/5/13/479b60a96bd848520d3e06724a4545cf5ddf218b1d1480021eb3f691131e6f586850b52b48da7d44eec61ec7f0089070d7b9d2ac8c9a4ffcb29e50ded2d53e7d/保存docker镜像.md", "tags": [{"create_time": 1738284594.0, "name": "docker", "tag_id": "385cac26f6bdce0a233b1fd11b82a28ef0912726d2e6f85d3433bc599700523dfc1aac66c6495d62d3620abbe861c215a45bda3c0a33f0f798529d51f2dd190e"}], "title": "保存docker镜像"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### 安装kubernetes1.23.17\n\n```bash\n#!/bin/bash\n\necho $1 | sudo -S rm -v /etc/localtime\necho $1 | sudo -S ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\necho $1 | sudo -S apt update\necho $1 | sudo -S apt install git zsh curl wget vim -y\n# git clone https://github.com/ohmyzsh/ohmyzsh && cd ohmyzsh/tools/ && sh install.sh\n\necho $1 | sudo -S apt install docker.io -y\necho $1 | sudo -S usermod -aG docker $USER\necho $1 | sudo -S chmod 666 /var/run/docker.sock\necho $1 | sudo -S tee /etc/docker/daemon.json > /dev/null <<EOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\necho $1 | sudo -S systemctl enable docker\necho $1 | sudo -S systemctl daemon-reload\necho $1 | sudo -S systemctl restart docker\n\necho $1 | sudo -S tee /etc/modules-load.d/k8s.conf > /dev/null <<EOF\nbr_netfilter\nEOF\necho $1 | sudo -S tee /etc/sysctl.d/k8s.conf > /dev/null <<EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward=1 # better than modify /etc/sysctl.conf\nEOF\necho $1 | sudo -S sysctl --system\n\necho $1 | sudo -S swapoff -a\necho $1 | sudo -S sed -ri '/\\sswap\\s/s/^#?/#/' /etc/fstab\n\necho $1 | sudo -S apt-get update\necho $1 | sudo -S apt-get install -y apt-transport-https ca-certificates curl gpg\n# curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | echo $1 | sudo -S apt-key add -\ncurl -fsSL https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg -o /tmp/kubernetes-key.gpg\nsudo apt-key add /tmp/kubernetes-key.gpg\nrm -rf /tmp/kubernetes-key.gpg\necho $1 | sudo -S tee /etc/apt/sources.list.d/kubernetes.list >> /dev/null <<EOF\ndeb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\nEOF\necho $1 | sudo -S apt-get update\necho $1 | sudo -S apt install -y kubeadm=1.23.17-00 kubectl=1.23.17-00 kubelet=1.23.17-00 --no-install-recommends\necho $1 | sudo -S apt-mark hold kubelet kubeadm sudo kubectl\n```\n\n```bash\n#!/bin/bash\n\nGATEWAY=\"{{ GATEWAY }}\"\nNFS_SERVER_IP=\"{{ NFS_SERVER_IP }}\"\nSHARED_PATH=\"{{ SHARED_PATH }}\"\nLOCAL_KEY=\"$HOME/.ssh/id_rsa.pub\"\nREMOTE_AUTHORIZED_KEYS=\"$HOME/.ssh/authorized_keys\"\nMASTER_JOIN_COMMAND_PATH=\"$SHARED_PATH/master_join_command.sh\"\nWORKER_JOIN_COMMAND_PATH=\"$SHARED_PATH/worker_join_command.sh\"\nKUBERNETES_IMAGE=\"$SHARED_PATH/{{ KUBERNETES_IMAGE }}\"\nLOW_ALTITUDE_AI_PLATFORM_IMAGE=\"$SHARED_PATH/{{ LOW_ALTITUDE_AI_PLATFORM_IMAGE }}\"\nALGORITHM_IMAGE=\"$SHARED_PATH/{{ ALGORITHM_IMAGE }}\"\n\nif [[ ! -f $LOCAL_KEY ]]; then\n    ssh-keygen -t rsa\nfi\nLOCAL_KEY_CONTENT=$(cat $LOCAL_KEY)\n\ntail -n +2 .env | while IFS=, read -r hostname target_ip user password node_type; do\n    # 添加部署节点到远程节点 ssh 公钥\n    echo \"1 => 添加部署节点到远程节点 ssh 公钥\"\n    ssh-copy-id -f -i $LOCAL_KEY $user@$target_ip\ndone\n\ntail -n +2 .env | while IFS=, read -r hostname target_ip user password node_type; do\n    echo \"正在配置 $user@$hostname ($target_ip)\"\n    # 配置主机 hostname\n    echo \"2 => 配置主机 $hostname\"\n    ssh $user@$target_ip \"bash -s\" < set_hostname.sh $password $hostname\n    \n    if [[ $NFS_SERVER_IP == $target_ip ]]; then\n        # 安装 nfs server\n        echo \"3 => 安装 nfs server：$target_ip 是 nfs sever 节点\"\n        ssh $user@$target_ip \"bash -s\" < install_nfs_server.sh $password $SHARED_PATH\n    else\n        # 安装 nfs client\n        echo \"3 => 安装 nfs client：$target_ip 是 nfs client 节点\"\n        ssh $user@$target_ip \"bash -s\" < install_nfs_client.sh $password $NFS_SERVER_IP $SHARED_PATH\n    fi\n\n    echo \"4 => 安装准备......\"\n    ssh $user@$target_ip \"bash -s\" < ready.sh $password\ndone\n\necho \"5 => 加载镜像......\"\ntail -n +2 .env | while IFS=, read -r hostname target_ip user password node_type; do\n    echo \"正在加载镜像 $user@$hostname ($target_ip)\"\n    if [[ -f $KUBERNETES_IMAGE ]]; then\n        ssh -n $user@$target_ip \"docker load -i $KUBERNETES_IMAGE\"\n    fi\n    if [[ -f $LOW_ALTITUDE_AI_PLATFORM_IMAGE ]]; then\n        ssh -n $user@$target_ip \"docker load -i $LOW_ALTITUDE_AI_PLATFORM_IMAGE\"\n    fi\n    if [[ -f $ALGORITHM_IMAGE ]]; then\n        ssh -n $user@$target_ip \"docker load -i $ALGORITHM_IMAGE\"\n    fi\ndone\n\necho \"6 => 初始化 master 节点\"\ntail -n +2 .env | while IFS=, read -r hostname target_ip user password node_type; do\n    if [[ $node_type == \"init;master\" ]]; then\n        echo \"$hostname => 初始化 master 节点\"\n        current_path=$(pwd)\n        ssh $user@$target_ip \"bash -s\" < init_master.sh $password $target_ip $hostname $MASTER_JOIN_COMMAND_PATH $WORKER_JOIN_COMMAND_PATH $NFS_SERVER_IP $SHARED_PATH $current_path\n    fi\ndone\n\necho \"7 => 节点加入 master 节点\"\ntail -n +2 .env | while IFS=, read -r hostname target_ip user password node_type; do\n    if [[ $node_type == \"init;master\" ]]; then\n        continue\n    fi\n\n    if [[ $node_type == \"master\" && -f $MASTER_JOIN_COMMAND_PATH ]]; then\n        echo \"节点 $hostname 以 master 角色加入 master 节点\"\n        ssh $user@$target_ip \"bash -s\" < $MASTER_JOIN_COMMAND_PATH\n    fi\n\n    if [[ $node_type == \"worker\" && -f $WORKER_JOIN_COMMAND_PATH ]]; then\n        echo \"节点 $hostname 以 worker 角色加入 master 节点\"\n        ssh $user@$target_ip \"bash -s\" < $WORKER_JOIN_COMMAND_PATH\n    fi\ndone\n\necho \"8 => 删除部署节点到远程节点 ssh 公钥\"\ntail -n +2 .env | while IFS=, read -r hostname target_ip user password node_type; do\n    ssh -n $user@$target_ip \"sed -i -e \\\"s|$LOCAL_KEY_CONTENT||g\\\" ~/.ssh/authorized_keys\"\ndone\n```\n\n```bash\n#!/bin/bash\n\n# init\necho $1 | sudo -S kubeadm init --kubernetes-version=v1.23.17 --pod-network-cidr=10.10.0.0/16 --v=5\necho $1 | sudo -S mkdir -p /root/.kube\necho $1 | sudo -S cp -i /etc/kubernetes/admin.conf /root/.kube/config\necho $1 | sudo -S chown $(id -u):$(id -g) /root/.kube/config\nexport KUBECONFIG=/etc/kubernetes/admin.conf\n\ntee $4 >> /dev/null <<EOF\n#!/bin/bash\n$(echo $1 | sudo -S kubeadm token create --print-join-command) --control-plane\nEOF\nsed -i -e \"s/kubeadm/echo $1 | sudo -S kubeadm/g\" $4\nchmod +x $4\n\ntee $5 >> /dev/null <<EOF\n#!/bin/bash\n$(echo $1 | sudo -S kubeadm token create --print-join-command)\nEOF\nsed -i -e \"s/kubeadm/echo $1 | sudo -S kubeadm/g\" $5\nchmod +x $5\n\n# network kubernetes\n# https://docs.projectcalico.org/v3.23/manifests/calico.yaml\necho $1 | sudo -S kubectl apply -f $8/calico.yaml\n\n#echo $1 | sudo -S kubectl taint nodes $3 node-role.kubernetes.io/control-plane:NoSchedule-\necho $1 | sudo -S kubectl taint nodes $3 node-role.kubernetes.io/master:NoSchedule-\n\n# nfs kubernetes\nsed -i -e \"s|{{ NFS_SERVER }}|$6|g\" -e \"s|{{ SHARED_PATH }}|$7|g\" $8/nfs-subdir-external-provisioner_deploy/deployment.yaml\necho $1 | sudo -S kubectl apply -f $8/nfs-subdir-external-provisioner_deploy/rbac.yaml\necho $1 | sudo -S kubectl apply -f $8/nfs-subdir-external-provisioner_deploy/class.yaml\necho $1 | sudo -S kubectl apply -f $8/nfs-subdir-external-provisioner_deploy/deployment.yaml\n\n# metrics-server\n# echo $1 | sudo -S kubectl apply -f $8/components_v0.7.0.yaml\n\n# nginx-ingress\n# https://docs.nginx.com/nginx-ingress-controller/installation/\n# https://docs.nginx.com/nginx-ingress-controller/installation/installing-nic/installation-with-manifests/\n# git clone https://github.com/nginx/kubernetes-ingress.git\n# wget https://github.com/nginx/kubernetes-ingress/archive/refs/tags/v4.0.0.tar.gz -O kubernetes-ingress_v4.0.0.tar.gz\n# cd kubernetes-ingress\ntar zxf $8/kubernetes-ingress_v4.0.0.tar.gz -C $8/\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/deployments/common/ns-and-sa.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/deployments/rbac/rbac.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/deployments/rbac/ap-rbac.yaml # NGINX App Protect only\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/deployments/rbac/apdos-rbac.yaml # NGINX App Protect DoS only\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/examples/shared-examples/default-server-secret/default-server-secret.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/deployments/common/nginx-config.yaml\n# CRDs\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/k8s.nginx.org_virtualservers.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/k8s.nginx.org_virtualserverroutes.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/k8s.nginx.org_transportservers.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/k8s.nginx.org_policies.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/k8s.nginx.org_globalconfigurations.yaml\n# NGINX App Protect WAF\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/appprotect.f5.com_aplogconfs.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/appprotect.f5.com_appolicies.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/appprotect.f5.com_apusersigs.yaml\n# NGINX App Protect DoS\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/appprotectdos.f5.com_apdoslogconfs.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/appprotectdos.f5.com_apdospolicy.yaml\necho $1 | sudo -S kubectl apply -f $8/kubernetes-ingress-4.0.0/config/crd/bases/appprotectdos.f5.com_dosprotectedresources.yaml\n\n# dashboard\necho $1 | sudo -S kubectl apply -f $8/dashboard/recommended.yaml\nopenssl req -x509 -days 365 -out $8/dashboard/kubernetes.test.crt -keyout $8/dashboard/kubernetes.test.key -newkey rsa:2048 -nodes -sha256 -subj '/CN=kubernetes.test' -extensions EXT -config <( printf \"[dn]\\nCN=kubernetes.test\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:kubernetes.test\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\necho $1 | sudo -S kubectl create secret tls dashboard-secret -n kubernetes-dashboard --cert=$8/dashboard/kubernetes.test.crt --key=$8/dashboard/kubernetes.test.key --dry-run=client -o yaml > $8/dashboard/dashboard-cert.yaml\necho $1 | sudo -S kubectl apply -f $8/dashboard/dashboard-cert.yaml\necho $1 | sudo -S kubectl apply -f $8/dashboard/dashboard-ingress.yaml\necho $1 | sudo -S kubectl get pods --namespace=nginx-ingress\n\n# kuboard\ndocker run -d --restart=unless-stopped --name=kuboard -p 80:80/tcp -p 10081:10081/tcp -e KUBOARD_ENDPOINT=\"http://$2:80\" -e KUBOARD_AGENT_SERVER_TCP_PORT=\"10081\" -v $HOME/kuboard-data:/data eipwork/kuboard:v3\n\n# prometheus\n# wget https://github.com/prometheus-operator/kube-prometheus/archive/refs/tags/v0.9.0.tar.gz -O kube-prometheus_v0.9.0.tar.gz\ntar zxf $8/kube-prometheus_v0.9.0.tar.gz -C $8/\nsed -e '/spec/a\\  type: NodePort' -e '/targetPort/a\\    nodePort: {{ GRAFANA_SERVICE_PORT }}' -i $8/kube-prometheus-0.9.0/manifests/grafana-service.yaml\nsed -e '/spec/a\\  type: NodePort' -e '/targetPort/a\\    nodePort: {{ PROMETHEUS_SERVICE_PORT }}' -i $8/kube-prometheus-0.9.0/manifests/prometheus-service.yaml\necho $1 | sudo -S kubectl create -f $8/kube-prometheus-0.9.0/manifests/setup\necho $1 | sudo -S kubectl create -f $8/kube-prometheus-0.9.0/manifests/\n# kubectl delete --ignore-not-found=true -f manifests/ -f manifests/setup\n```\n", "content_hash": "578f741f571f47bc23891861867708d467ee391da364fd3404da8c7f6c8f7fe31760c40682ab5abcf1bb170681dd261487509cc4a52a2f8d57ab857175449e0f", "create_time": 1747540888.0, "note_id": "5c824982435bb90798ead9c2e00b8a4a87470883b30404fef09e4abafbbbbd0b9ae95fd4dab36edd4af3aa7e46525e9bc2613af804820f544c70420933674c8e", "path": "data/2025/5/18/5c824982435bb90798ead9c2e00b8a4a87470883b30404fef09e4abafbbbbd0b9ae95fd4dab36edd4af3aa7e46525e9bc2613af804820f544c70420933674c8e/安装kubernetes1.23.17.md", "tags": [{"create_time": 1747540888.0, "name": "kubernetes", "tag_id": "6f733290458d1cc32d79b826c4b5f009499bdfe0341badf0d09a25c48d8af7625e29bafd826bc3d61c63ed8482502fcde9c19b585b8d0299ab979aac108e0a22"}], "title": "安装kubernetes1.23.17"}, {"category": {"category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "create_time": 1735778213.0, "description": "开发", "name": "开发"}, "category_id": "04a41edea60dc2d27dfd213aba2e1b052942a729bdfa506451f08f9cd3ce4548e87b6744b8b1a44364ca28f48509b401af276a9b83cbfe87b45860e86308bb10", "content": "### Promox Virtual Environment(PVE)修改网络\n\n```bash\nsed -i.bak -e \"s|old_ip|new_ip|g\" /etc/network/interfaces\nsed -i.bak -e \"s|old_ip|new_ip|g\" /etc/resolv.conf\nsed -i.bak -e \"s|old_ip|new_ip|g\" /etc/hosts\nreboot\n```\n\n/etc/network/interfaces\n```txt\nauto lo\niface lo inet loopback\n \niface ens33 inet manual\n \nauto vmbr0\niface vmbr0 inet static\n\taddress 192.168.100.3/24\n\tgateway 192.168.100.2\n\tbridge-ports ens33\n\tbridge-stp off\n\tbridge-fd 0\n```\n\n/etc/resolv.conf\n```txt\nsearch localdomain\nnameserver 192.168.100.2\n```\n\n/etc/hosts\n```txt\n127.0.0.1 localhost.localdomain localhost\n192.168.100.3 pve.localdomain pve\n \n# The following lines are desirable for IPv6 capable hosts\n \n::1     ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\nff02::3 ip6-allhosts\n```\n", "content_hash": "a92fd584cdccb07c80b7b576aaabcf2736db2d6e00c47516e9a15de083c493a1de87676b5493a0fd2d1b90b35b5f946baabaff12bf5f10eaafa2bf6e59f871cb", "create_time": 1747737546.0, "note_id": "eecda0b4a38e98e9640382e2fdd634536bc1876f56b94f12d29b9dff73c22b2e403473dc50cd8ad502638a88767cd12a67c67ec6fc1e5aedc464f0414b601f9a", "path": "data/2025/5/20/eecda0b4a38e98e9640382e2fdd634536bc1876f56b94f12d29b9dff73c22b2e403473dc50cd8ad502638a88767cd12a67c67ec6fc1e5aedc464f0414b601f9a/Promox Virtual Environment(PVE)修改网络.md", "tags": [{"create_time": 1747737546.0, "name": "pve", "tag_id": "2ee23e4f14df4d517418788085c2064eefb31b38473c510bfb3240fe655933f4d68aed410f67bcc6ed76718c25f26afd5f06807a57b982036099458a01cdb8d8"}], "title": "Promox Virtual Environment(PVE)修改网络"}]